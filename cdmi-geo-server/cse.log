[2018-04-21 18:58:31,332/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2018-04-21 18:58:32,399/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6379eb: startup date [Sat Apr 21 18:58:32 CST 2018]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2018-04-21 18:58:32,904/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2018-04-21 18:58:33,077/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$545391d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2018-04-21 18:58:33,176/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.3.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2018-04-21 18:58:34,000/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:637)
[2018-04-21 18:58:34,041/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@ec2cc4: startup date [Sat Apr 21 18:58:34 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6379eb org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2018-04-21 18:58:34,748/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-04-21 18:58:35,255/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-bizkeeper/1.0.0-m1/handler-bizkeeper-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-04-21 18:58:35,272/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-metrics/1.0.0-m1/foundation-metrics-1.0.0-m1.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-04-21 18:58:35,289/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-loadbalance/1.0.0-m1/handler-loadbalance-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-04-21 18:58:35,304/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/transport-rest-client/1.0.0-m1/transport-rest-client-1.0.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-04-21 18:58:35,318/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-vertx/1.0.0-m1/foundation-vertx-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-04-21 18:58:35,331/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-config/1.0.0-m1/foundation-config-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-04-21 18:58:35,342/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-04-21 18:58:35,536/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2018-04-21 18:58:36,037/CST][main][WARN]Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses(ConfigurationClassPostProcessor.java:373)
[2018-04-21 18:58:36,215/CST][main][INFO]BeanFactory id=bc172967-9664-3b40-90d9-fdef6a819633 org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263)
[2018-04-21 18:58:36,268/CST][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2018-04-21 18:58:36,278/CST][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2018-04-21 18:58:36,288/CST][main][INFO]create dynamic config: org.apache.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:169)
[2018-04-21 18:58:36,297/CST][main][INFO]create local config: org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:87)
[2018-04-21 18:58:36,297/CST][main][INFO] file:/D:/2.JSpace/cdmi-dev-all/cdmi-geo-server/target/classes/microservice.yaml. org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:89)
[2018-04-21 18:58:36,312/CST][main][INFO]Can not get the SPI service, the interface type is: interface org.apache.servicecomb.config.spi.ConfigCenterConfigurationSource org.apache.servicecomb.foundation.common.utils.SPIServiceUtils.getTargetService(SPIServiceUtils.java:54)
[2018-04-21 18:58:36,312/CST][main][INFO]config center SPI service can not find, skip to load configuration from config center org.apache.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:154)
[2018-04-21 18:58:36,704/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2018-04-21 18:58:36,978/CST][main][INFO]Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$38398edc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2018-04-21 18:58:37,090/CST][main][INFO]Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$545391d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2018-04-21 18:58:37,723/CST][main][WARN]Unable to determine jdbc url from datasource org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:80)
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown database 'cdmi-geo'
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:339)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:366)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:72)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:139)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:105)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$a1bff2fc.CGLIB$jpaVendorAdapter$3(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$a1bff2fc$$FastClassBySpringCGLIB$$2c09b7bb.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration$$EnhancerBySpringCGLIB$$a1bff2fc.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1028)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:207)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1136)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1064)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1028)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:207)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1136)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1064)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1028)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at pw.cdmi.aws.geo.Application.main(Application.java:33)
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown database 'cdmi-geo'
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:326)
	... 60 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown database 'cdmi-geo'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:943)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2205)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2236)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2035)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:790)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:400)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:732)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:664)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:479)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	... 61 more
[2018-04-21 18:58:37,842/CST][main][INFO]Building JPA container EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:349)
[2018-04-21 18:58:37,976/CST][main][INFO]HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
[2018-04-21 18:58:38,142/CST][main][INFO]HHH000412: Hibernate Core {5.0.12.Final} org.hibernate.Version.logVersion(Version.java:37)
[2018-04-21 18:58:38,154/CST][main][INFO]HHH000206: hibernate.properties not found org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
[2018-04-21 18:58:38,158/CST][main][INFO]HHH000021: Bytecode provider name : javassist org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
[2018-04-21 18:58:38,261/CST][main][INFO]HCANN000001: Hibernate Commons Annotations {5.0.1.Final} org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
[2018-04-21 18:58:38,528/CST][main][WARN]HHH000342: Could not obtain connection to query metadata : Unknown database 'cdmi-geo' org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:132)
[2018-04-21 18:58:38,533/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2018-04-21 18:58:38,541/CST][main][WARN]Error handling failed (Error creating bean with name 'org.apache.servicecomb.core.CseApplicationListener#0' defined in URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.config.internalTransactionAdvisor' defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]: Factory method 'transactionAdvisor' threw exception; nested exception is java.lang.NullPointerException) org.springframework.boot.SpringApplicationRunListeners.callFinishedListener(SpringApplicationRunListeners.java:91)
[2018-04-21 18:58:38,555/CST][main][ERROR]Application startup failed org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:815)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1589)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:554)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1081)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:856)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at pw.cdmi.aws.geo.Application.main(Application.java:33)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:228)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:207)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:847)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:874)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:60)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:353)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:370)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:359)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1585)
	... 15 more
Caused by: org.hibernate.HibernateException: Access to DialectResolutionInfo cannot be null when 'hibernate.dialect' not set
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:100)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:137)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:254)
	... 31 more
[2018-04-21 18:59:37,645/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2018-04-21 18:59:38,573/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6379eb: startup date [Sat Apr 21 18:59:38 CST 2018]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2018-04-21 18:59:38,924/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2018-04-21 18:59:39,080/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$545391d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2018-04-21 18:59:39,174/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.3.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2018-04-21 18:59:39,780/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:637)
[2018-04-21 18:59:39,812/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@25e2ab5a: startup date [Sat Apr 21 18:59:39 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6379eb org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2018-04-21 18:59:40,527/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-04-21 18:59:41,103/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-bizkeeper/1.0.0-m1/handler-bizkeeper-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-04-21 18:59:41,125/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-metrics/1.0.0-m1/foundation-metrics-1.0.0-m1.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-04-21 18:59:41,141/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-loadbalance/1.0.0-m1/handler-loadbalance-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-04-21 18:59:41,169/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/transport-rest-client/1.0.0-m1/transport-rest-client-1.0.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-04-21 18:59:41,192/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-vertx/1.0.0-m1/foundation-vertx-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-04-21 18:59:41,210/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-config/1.0.0-m1/foundation-config-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-04-21 18:59:41,251/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2018-04-21 18:59:41,432/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2018-04-21 18:59:41,925/CST][main][WARN]Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses(ConfigurationClassPostProcessor.java:373)
[2018-04-21 18:59:42,119/CST][main][INFO]BeanFactory id=bc172967-9664-3b40-90d9-fdef6a819633 org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263)
[2018-04-21 18:59:42,182/CST][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2018-04-21 18:59:42,182/CST][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2018-04-21 18:59:42,189/CST][main][INFO]create dynamic config: org.apache.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:169)
[2018-04-21 18:59:42,200/CST][main][INFO]create local config: org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:87)
[2018-04-21 18:59:42,201/CST][main][INFO] file:/D:/2.JSpace/cdmi-dev-all/cdmi-geo-server/target/classes/microservice.yaml. org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:89)
[2018-04-21 18:59:42,219/CST][main][INFO]Can not get the SPI service, the interface type is: interface org.apache.servicecomb.config.spi.ConfigCenterConfigurationSource org.apache.servicecomb.foundation.common.utils.SPIServiceUtils.getTargetService(SPIServiceUtils.java:54)
[2018-04-21 18:59:42,220/CST][main][INFO]config center SPI service can not find, skip to load configuration from config center org.apache.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:154)
[2018-04-21 18:59:42,506/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2018-04-21 18:59:42,739/CST][main][INFO]Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$38398edc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2018-04-21 18:59:42,837/CST][main][INFO]Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$545391d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2018-04-21 18:59:43,645/CST][main][INFO]Building JPA container EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:349)
[2018-04-21 18:59:43,754/CST][main][INFO]HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
[2018-04-21 18:59:43,918/CST][main][INFO]HHH000412: Hibernate Core {5.0.12.Final} org.hibernate.Version.logVersion(Version.java:37)
[2018-04-21 18:59:43,922/CST][main][INFO]HHH000206: hibernate.properties not found org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
[2018-04-21 18:59:43,933/CST][main][INFO]HHH000021: Bytecode provider name : javassist org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
[2018-04-21 18:59:44,070/CST][main][INFO]HCANN000001: Hibernate Commons Annotations {5.0.1.Final} org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
[2018-04-21 18:59:44,267/CST][main][INFO]HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
[2018-04-21 18:59:44,994/CST][main][INFO]HHH000228: Running hbm2ddl schema update org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:105)
[2018-04-21 18:59:45,014/CST][main][INFO]HHH000262: Table not found: c_city org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:365)
[2018-04-21 18:59:45,015/CST][main][INFO]HHH000262: Table not found: c_city org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:365)
[2018-04-21 18:59:45,068/CST][main][INFO]HHH000262: Table not found: c_country org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:365)
[2018-04-21 18:59:45,070/CST][main][INFO]HHH000262: Table not found: c_country org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:365)
[2018-04-21 18:59:45,109/CST][main][INFO]HHH000262: Table not found: c_district org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:365)
[2018-04-21 18:59:45,111/CST][main][INFO]HHH000262: Table not found: c_district org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:365)
[2018-04-21 18:59:45,147/CST][main][INFO]HHH000262: Table not found: c_province org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:365)
[2018-04-21 18:59:45,149/CST][main][INFO]HHH000262: Table not found: c_province org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:365)
[2018-04-21 18:59:45,189/CST][main][INFO]HHH000262: Table not found: c_town org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:365)
[2018-04-21 18:59:45,191/CST][main][INFO]HHH000262: Table not found: c_town org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processGetTableResults(InformationExtractorJdbcDatabaseMetaDataImpl.java:365)
[2018-04-21 18:59:45,326/CST][main][INFO]Initialized JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:379)
[2018-04-21 18:59:45,642/CST][main][INFO]Found swagger generator context: org.apache.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext org.apache.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2018-04-21 18:59:45,642/CST][main][INFO]Found swagger generator context: org.apache.servicecomb.swagger.generator.jaxrs.JaxrsSwaggerGeneratorContext org.apache.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2018-04-21 18:59:45,644/CST][main][INFO]Found swagger generator context: org.apache.servicecomb.swagger.generator.pojo.PojoSwaggerGeneratorContext org.apache.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2018-04-21 18:59:45,665/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.springmvc.response.SpringmvcProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2018-04-21 18:59:45,665/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.producer.CseResponseProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2018-04-21 18:59:45,667/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.producer.CompletableFutureProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2018-04-21 18:59:45,667/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.jaxrs.response.JaxrsProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2018-04-21 18:59:45,668/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.producer.DefaultProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2018-04-21 18:59:45,673/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.springmvc.response.SpringmvcConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2018-04-21 18:59:45,673/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.consumer.CseResponseConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2018-04-21 18:59:45,674/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.consumer.CompletableFutureConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2018-04-21 18:59:45,675/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.jaxrs.response.JaxrsConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2018-04-21 18:59:45,675/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.consumer.DefaultConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2018-04-21 18:59:46,233/CST][main][INFO]load microservice config, name=cdmi-geo, paths=[file:/D:/2.JSpace/cdmi-dev-all/cdmi-geo-server/target/classes/microservice.yaml] org.apache.servicecomb.serviceregistry.definition.MicroserviceDefinition.logConfigPath(MicroserviceDefinition.java:142)
[2018-04-21 18:59:46,325/CST][main][INFO]It is running in the normal mode, a separated service registry is required org.apache.servicecomb.serviceregistry.registry.ServiceRegistryFactory.create(ServiceRegistryFactory.java:81)
[2018-04-21 18:59:46,523/CST][main][INFO]add network interface name:wlan0,host address:192.168.2.109 org.apache.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:114)
[2018-04-21 18:59:46,650/CST][main][INFO]add host name from localhost:LAPTOP-K999KJQI,host address:192.168.2.109 org.apache.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:72)
[2018-04-21 18:59:47,084/CST][main][INFO]HHH000397: Using ASTQueryTranslatorFactory org.hibernate.hql.internal.QueryTranslatorFactoryInitiator.initiateService(QueryTranslatorFactoryInitiator.java:47)
[2018-04-21 18:59:47,642/CST][main][INFO]executor group 2, thread per group 4. org.apache.servicecomb.core.executor.FixedThreadExecutor.<init>(FixedThreadExecutor.java:54)
[2018-04-21 18:59:49,112/CST][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2018-04-21 18:59:49,113/CST][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2018-04-21 18:59:49,265/CST][main][INFO]Registering beans for JMX exposure on startup org.springframework.jmx.export.MBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431)
[2018-04-21 18:59:49,277/CST][main][INFO]Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:916)
[2018-04-21 18:59:49,278/CST][main][INFO]Bean with name 'refreshEndpoint' has been autodetected for JMX exposure org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:916)
[2018-04-21 18:59:49,279/CST][main][INFO]Bean with name 'restartEndpoint' has been autodetected for JMX exposure org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:916)
[2018-04-21 18:59:49,280/CST][main][INFO]Bean with name 'refreshScope' has been autodetected for JMX exposure org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:916)
[2018-04-21 18:59:49,280/CST][main][INFO]Bean with name 'environmentManager' has been autodetected for JMX exposure org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:916)
[2018-04-21 18:59:49,283/CST][main][INFO]Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager] org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678)
[2018-04-21 18:59:49,300/CST][main][INFO]Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint] org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678)
[2018-04-21 18:59:49,323/CST][main][INFO]Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope] org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678)
[2018-04-21 18:59:49,346/CST][main][INFO]Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=25e2ab5a,type=ConfigurationPropertiesRebinder] org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678)
[2018-04-21 18:59:49,364/CST][main][INFO]Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint] org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678)
[2018-04-21 18:59:49,368/CST][main][INFO]Registering beans for JMX exposure on startup org.springframework.jmx.export.MBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431)
[2018-04-21 18:59:49,567/CST][main][INFO]Starting beans in phase 0 org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341)
[2018-04-21 18:59:49,569/CST][main][INFO]Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint] org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678)
[2018-04-21 18:59:49,583/CST][main][INFO]Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint] org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678)
[2018-04-21 18:59:49,603/CST][main][INFO]Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint] org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678)
[2018-04-21 18:59:49,606/CST][main][INFO]Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint] org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678)
[2018-04-21 18:59:49,613/CST][main][INFO]Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint] org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678)
[2018-04-21 18:59:49,616/CST][main][INFO]Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint] org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678)
[2018-04-21 18:59:49,619/CST][main][INFO]Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint] org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678)
[2018-04-21 18:59:49,622/CST][main][INFO]Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint] org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678)
[2018-04-21 18:59:49,631/CST][main][INFO]Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint] org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678)
[2018-04-21 18:59:49,634/CST][main][INFO]Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint] org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678)
[2018-04-21 18:59:49,636/CST][main][INFO]Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint] org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678)
[2018-04-21 18:59:49,638/CST][main][INFO]Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint] org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678)
[2018-04-21 18:59:49,640/CST][main][INFO]Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint] org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678)
[2018-04-21 18:59:49,643/CST][main][INFO]Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint] org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:678)
[2018-04-21 18:59:49,738/CST][main][WARN]address /0.0.0.0:8080, auto select a host address to publish 192.168.2.109:8080, maybe not the correct one org.apache.servicecomb.serviceregistry.RegistryUtils.genPublishIpPort(RegistryUtils.java:181)
[2018-04-21 18:59:49,744/CST][main][INFO]choose org.apache.servicecomb.transport.rest.vertx.VertxRestTransport for rest. org.apache.servicecomb.core.transport.TransportManager.chooseOneTransport(TransportManager.java:84)
[2018-04-21 18:59:49,744/CST][main][INFO]choose org.apache.servicecomb.transport.highway.HighwayTransport for highway. org.apache.servicecomb.core.transport.TransportManager.chooseOneTransport(TransportManager.java:84)
[2018-04-21 18:59:50,286/CST][transport-vert.x-eventloop-thread-2][INFO]Found HttpServerFilter: org.apache.servicecomb.common.rest.filter.tracing.TracingFilter. org.apache.servicecomb.transport.rest.vertx.AbstractVertxHttpDispatcher.<init>(AbstractVertxHttpDispatcher.java:40)
[2018-04-21 18:59:50,288/CST][transport-vert.x-eventloop-thread-2][INFO]init vertx http dispatcher org.apache.servicecomb.transport.rest.vertx.VertxRestDispatcher org.apache.servicecomb.transport.rest.vertx.RestServerVerticle.initDispatcher(RestServerVerticle.java:95)
[2018-04-21 18:59:50,293/CST][transport-vert.x-eventloop-thread-2][INFO]set uploads directory to null. org.apache.servicecomb.transport.rest.vertx.AbstractVertxHttpDispatcher.createBodyHandler(AbstractVertxHttpDispatcher.java:53)
[2018-04-21 18:59:50,789/CST][transport-vert.x-eventloop-thread-2][INFO]rest listen success. address=0.0.0.0:8080 org.apache.servicecomb.transport.rest.vertx.RestServerVerticle.lambda$startListen$0(RestServerVerticle.java:103)
[2018-04-21 18:59:50,792/CST][main][INFO]endpoint to publish: rest://192.168.2.109:8080/ org.apache.servicecomb.core.transport.TransportManager.init(TransportManager.java:58)
[2018-04-21 18:59:50,810/CST][transport-vert.x-eventloop-thread-6][WARN]highway listen address is not configured, will not listen. org.apache.servicecomb.transport.highway.HighwayServerVerticle.startListen(HighwayServerVerticle.java:59)
[2018-04-21 18:59:50,812/CST][main][INFO]running microservice register task. org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-04-21 18:59:51,066/CST][registry-vert.x-eventloop-thread-0][WARN]get response for org.apache.servicecomb.serviceregistry.api.response.GetExistenceResponse failed, 400:Bad Request, {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"service does not exist."}
 org.apache.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:117)
[2018-04-21 18:59:51,132/CST][main][INFO]Registry Microservice successfully. id=1d501e0f455311e89425f85971bbe703 appId=cdmi-geo-server, name=cdmi-geo, version=0.0.1, schemaIds=[] org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:89)
[2018-04-21 18:59:51,135/CST][main][INFO]read MicroserviceRegisterTask status is FINISHED org.apache.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-04-21 18:59:51,135/CST][main][INFO]running microservice instance register task. org.apache.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:59)
[2018-04-21 18:59:51,146/CST][main][INFO]Register microservice instance success. microserviceId=1d501e0f455311e89425f85971bbe703 instanceId=1d537bdf455311e89425f85971bbe703 endpoints=[rest://192.168.2.109:8080/] lease 120s org.apache.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:77)
[2018-04-21 18:59:51,147/CST][main][INFO]receive MicroserviceInstanceRegisterTask event, check instance Id... org.apache.servicecomb.core.CseApplicationListener$1.afterRegistryInstance(CseApplicationListener.java:170)
[2018-04-21 18:59:51,148/CST][main][INFO]instance registry succeeds for the first time, will send AFTER_REGISTRY event. org.apache.servicecomb.core.CseApplicationListener$1.afterRegistryInstance(CseApplicationListener.java:172)
[2018-04-21 18:59:51,152/CST][main][INFO]read MicroserviceInstanceRegisterTask status is FINISHED org.apache.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-04-21 18:59:51,180/CST][main][INFO]Started Application in 13.307 seconds (JVM running for 14.271) org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:57)
[2018-04-21 18:59:51,209/CST][registry-vert.x-eventloop-thread-2][INFO]watching microservice 1d501e0f455311e89425f85971bbe703 successfully, the chosen service center address is 127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$8(ServiceRegistryClientImpl.java:533)
[2018-04-21 19:00:21,179/CST][Service Center Task][WARN]sc task interval changed from -1 to 30 org.apache.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.beginCycle(ServiceCenterTaskMonitor.java:39)
[2018-04-21 19:49:21,668/CST][Service Center Task][WARN]sc task postponed for 2790487ms for some reason. org.apache.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.beginCycle(ServiceCenterTaskMonitor.java:43)
[2018-04-21 19:49:21,688/CST][registry-vert.x-eventloop-thread-2][ERROR]watcher connect to service center server failed, microservice 1d501e0f455311e89425f85971bbe703, connection is closed accidentally org.apache.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.watchErrorHandler(ServiceRegistryClientImpl.java:637)
[2018-04-21 19:49:21,689/CST][registry-vert.x-eventloop-thread-2][INFO]read exception event, message is :connection is closed accidentally org.apache.servicecomb.serviceregistry.task.ServiceCenterTask.onExceptionEvent(ServiceCenterTask.java:71)
[2018-04-21 19:49:21,691/CST][registry-vert.x-eventloop-thread-2][ERROR]ws close error. org.apache.servicecomb.serviceregistry.client.http.WebsocketUtils.lambda$null$1(WebsocketUtils.java:65)
java.lang.IllegalStateException: WebSocket is closed
	at io.vertx.core.http.impl.WebSocketImplBase.checkClosed(WebSocketImplBase.java:253)
	at io.vertx.core.http.impl.WebSocketImplBase.close(WebSocketImplBase.java:99)
	at org.apache.servicecomb.serviceregistry.client.http.WebsocketUtils.lambda$null$1(WebsocketUtils.java:63)
	at io.vertx.core.impl.ContextImpl.lambda$wrapTask$2(ContextImpl.java:344)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
	at java.lang.Thread.run(Thread.java:748)
[2018-04-21 19:49:22,066/CST][registry-vert.x-eventloop-thread-2][INFO]watching microservice 1d501e0f455311e89425f85971bbe703 successfully, the chosen service center address is 127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$8(ServiceRegistryClientImpl.java:533)
[2018-04-21 19:49:22,126/CST][Service Center Task][WARN]Bad Request org.apache.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.heartbeat(ServiceRegistryClientImpl.java:501)
[2018-04-21 19:49:22,126/CST][Service Center Task][ERROR]Update heartbeat to service center failed, microservice instance=1d501e0f455311e89425f85971bbe703/1d537bdf455311e89425f85971bbe703 does not exist org.apache.servicecomb.serviceregistry.task.MicroserviceInstanceHeartbeatTask.heartbeat(MicroserviceInstanceHeartbeatTask.java:79)
[2018-04-21 19:49:22,128/CST][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.onMicroserviceInstanceHeartbeatTask(MicroserviceRegisterTask.java:49)
[2018-04-21 19:49:22,128/CST][Service Center Task][INFO]read MicroserviceInstanceHeartbeatTask status is READY org.apache.servicecomb.serviceregistry.task.ServiceCenterTask.onMicroserviceInstanceHeartbeatTask(ServiceCenterTask.java:63)
[2018-04-21 19:49:22,129/CST][Service Center Task][INFO]running microservice register task. org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2018-04-21 19:49:22,141/CST][Service Center Task][INFO]Microservice exists in service center, no need to register. id=1d501e0f455311e89425f85971bbe703 appId=cdmi-geo-server, name=cdmi-geo, version=0.0.1 org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:64)
[2018-04-21 19:49:22,177/CST][Service Center Task][INFO]SchemaIds is equals to service center. id=1d501e0f455311e89425f85971bbe703 appId=cdmi-geo-server, name=cdmi-geo, version=0.0.1, schemaIds=[] org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.checkSchemaIdSet(MicroserviceRegisterTask.java:127)
[2018-04-21 19:49:22,178/CST][Service Center Task][INFO]read MicroserviceRegisterTask status is FINISHED org.apache.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2018-04-21 19:49:22,179/CST][Service Center Task][INFO]running microservice instance register task. org.apache.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:59)
[2018-04-21 19:49:22,212/CST][Service Center Task][INFO]Register microservice instance success. microserviceId=1d501e0f455311e89425f85971bbe703 instanceId=1d537bdf455311e89425f85971bbe703 endpoints=[rest://192.168.2.109:8080/] lease 120s org.apache.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:77)
[2018-04-21 19:49:22,212/CST][Service Center Task][INFO]read MicroserviceInstanceRegisterTask status is FINISHED org.apache.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2019-01-10 13:34:04,932/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 13:34:06,217/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83: startup date [Thu Jan 10 13:34:06 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:34:06,710/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:34:06,857/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:34:07,090/CST][main][INFO]HV000001: Hibernate Validator 5.3.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 13:34:07,970/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:637)
[2019-01-10 13:34:08,009/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5f7b97da: startup date [Thu Jan 10 13:34:08 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:34:09,276/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:34:10,105/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-bizkeeper/1.0.0-m1/handler-bizkeeper-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:34:10,120/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-metrics/1.0.0-m1/foundation-metrics-1.0.0-m1.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:34:10,135/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-loadbalance/1.0.0-m1/handler-loadbalance-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:34:10,155/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/transport-rest-client/1.0.0-m1/transport-rest-client-1.0.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:34:10,172/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-vertx/1.0.0-m1/foundation-vertx-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:34:10,185/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-config/1.0.0-m1/foundation-config-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:34:10,200/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:34:10,378/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:34:10,872/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:34:11,017/CST][main][INFO]Overriding bean definition for bean 'jpaProvinceRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:34:11,036/CST][main][INFO]Overriding bean definition for bean 'jpaTownRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:34:11,041/CST][main][INFO]Overriding bean definition for bean 'jpaCityRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:34:11,045/CST][main][INFO]Overriding bean definition for bean 'jpaDistrictRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:34:11,067/CST][main][INFO]Overriding bean definition for bean 'jpaCountryRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:34:11,296/CST][main][WARN]Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses(ConfigurationClassPostProcessor.java:373)
[2019-01-10 13:34:11,585/CST][main][INFO]BeanFactory id=54640162-711d-386a-8f3f-063952aca670 org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263)
[2019-01-10 13:34:11,675/CST][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2019-01-10 13:34:11,676/CST][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2019-01-10 13:34:11,693/CST][main][INFO]create dynamic config: org.apache.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:169)
[2019-01-10 13:34:11,720/CST][main][INFO]create local config: org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:87)
[2019-01-10 13:34:11,721/CST][main][INFO] file:/D:/2.JSpace/cdmi-dev-all/cdmi-geo-server/target/classes/microservice.yaml. org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:89)
[2019-01-10 13:34:11,745/CST][main][INFO]Can not get the SPI service, the interface type is: interface org.apache.servicecomb.config.spi.ConfigCenterConfigurationSource org.apache.servicecomb.foundation.common.utils.SPIServiceUtils.getTargetService(SPIServiceUtils.java:54)
[2019-01-10 13:34:11,745/CST][main][INFO]config center SPI service can not find, skip to load configuration from config center org.apache.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:154)
[2019-01-10 13:34:12,031/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:34:12,277/CST][main][INFO]Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8ca99567] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:34:12,346/CST][main][INFO]Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:34:13,224/CST][main][INFO]Building JPA container EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:349)
[2019-01-10 13:34:13,247/CST][main][INFO]HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
[2019-01-10 13:34:13,409/CST][main][INFO]HHH000412: Hibernate Core {5.0.12.Final} org.hibernate.Version.logVersion(Version.java:37)
[2019-01-10 13:34:13,412/CST][main][INFO]HHH000206: hibernate.properties not found org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
[2019-01-10 13:34:13,416/CST][main][INFO]HHH000021: Bytecode provider name : javassist org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
[2019-01-10 13:34:13,501/CST][main][INFO]HCANN000001: Hibernate Commons Annotations {5.0.1.Final} org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
[2019-01-10 13:34:13,945/CST][main][INFO]HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
[2019-01-10 13:34:14,965/CST][main][INFO]HHH000228: Running hbm2ddl schema update org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:105)
[2019-01-10 13:34:15,292/CST][main][INFO]Initialized JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:379)
[2019-01-10 13:34:15,375/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoResource': Unsatisfied dependency expressed through field 'geoService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoServiceImpl': Unsatisfied dependency expressed through field 'cityDaoImpl'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'pw.cdmi.aws.geo.repositories.CityRepository' available: expected single matching bean but found 2: jpaCityRepository,mongoCityRepository org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2019-01-10 13:34:15,375/CST][main][INFO]Closing JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:548)
[2019-01-10 13:34:15,384/CST][main][WARN]Error handling failed (Error creating bean with name 'org.apache.servicecomb.core.CseApplicationListener#0' defined in URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.config.internalTransactionAdvisor' defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]: Factory method 'transactionAdvisor' threw exception; nested exception is java.lang.NullPointerException) org.springframework.boot.SpringApplicationRunListeners.callFinishedListener(SpringApplicationRunListeners.java:91)
[2019-01-10 13:34:15,391/CST][main][ERROR]

***************************
APPLICATION FAILED TO START
***************************

Description:

Field cityDaoImpl in pw.cdmi.aws.geo.service.impl.GeoServiceImpl required a single bean, but 2 were found:
	- jpaCityRepository: defined in null
	- mongoCityRepository: defined in null


Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed
 org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:42)
[2019-01-10 13:37:37,314/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 13:37:38,568/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83: startup date [Thu Jan 10 13:37:38 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:37:38,937/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:37:39,108/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:37:39,221/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.3.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 13:37:40,056/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:637)
[2019-01-10 13:37:40,088/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2a5b3fee: startup date [Thu Jan 10 13:37:40 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:37:41,267/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:37:41,985/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-bizkeeper/1.0.0-m1/handler-bizkeeper-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:37:42,004/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-metrics/1.0.0-m1/foundation-metrics-1.0.0-m1.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:37:42,021/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-loadbalance/1.0.0-m1/handler-loadbalance-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:37:42,050/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/transport-rest-client/1.0.0-m1/transport-rest-client-1.0.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:37:42,071/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-vertx/1.0.0-m1/foundation-vertx-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:37:42,087/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-config/1.0.0-m1/foundation-config-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:37:42,103/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:37:42,380/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:37:42,963/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:37:43,019/CST][main][INFO]Overriding bean definition for bean 'mongoTownRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:37:43,035/CST][main][INFO]Overriding bean definition for bean 'mongoDistrictRepositories' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:37:43,041/CST][main][INFO]Overriding bean definition for bean 'mongoCountryRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:37:43,051/CST][main][INFO]Overriding bean definition for bean 'mongoProvinceRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:37:43,062/CST][main][INFO]Overriding bean definition for bean 'mongoCityRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:37:43,254/CST][main][WARN]Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses(ConfigurationClassPostProcessor.java:373)
[2019-01-10 13:37:43,550/CST][main][INFO]BeanFactory id=54640162-711d-386a-8f3f-063952aca670 org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263)
[2019-01-10 13:37:43,595/CST][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2019-01-10 13:37:43,596/CST][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2019-01-10 13:37:43,607/CST][main][INFO]create dynamic config: org.apache.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:169)
[2019-01-10 13:37:43,618/CST][main][INFO]create local config: org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:87)
[2019-01-10 13:37:43,619/CST][main][INFO] file:/D:/2.JSpace/cdmi-dev-all/cdmi-geo-server/target/classes/microservice.yaml. org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:89)
[2019-01-10 13:37:43,646/CST][main][INFO]Can not get the SPI service, the interface type is: interface org.apache.servicecomb.config.spi.ConfigCenterConfigurationSource org.apache.servicecomb.foundation.common.utils.SPIServiceUtils.getTargetService(SPIServiceUtils.java:54)
[2019-01-10 13:37:43,742/CST][main][INFO]config center SPI service can not find, skip to load configuration from config center org.apache.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:154)
[2019-01-10 13:37:44,030/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:37:44,289/CST][main][INFO]Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8ca99567] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:37:44,391/CST][main][INFO]Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:37:45,416/CST][main][INFO]Building JPA container EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:349)
[2019-01-10 13:37:45,439/CST][main][INFO]HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
[2019-01-10 13:37:45,616/CST][main][INFO]HHH000412: Hibernate Core {5.0.12.Final} org.hibernate.Version.logVersion(Version.java:37)
[2019-01-10 13:37:45,626/CST][main][INFO]HHH000206: hibernate.properties not found org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
[2019-01-10 13:37:45,630/CST][main][INFO]HHH000021: Bytecode provider name : javassist org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
[2019-01-10 13:37:45,728/CST][main][INFO]HCANN000001: Hibernate Commons Annotations {5.0.1.Final} org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
[2019-01-10 13:37:46,014/CST][main][INFO]HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
[2019-01-10 13:37:47,197/CST][main][INFO]HHH000228: Running hbm2ddl schema update org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:105)
[2019-01-10 13:37:47,551/CST][main][INFO]Initialized JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:379)
[2019-01-10 13:37:47,609/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoResource': Unsatisfied dependency expressed through field 'geoService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoServiceImpl': Unsatisfied dependency expressed through field 'cityDaoImpl'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'pw.cdmi.aws.geo.repositories.CityRepository' available: expected single matching bean but found 2: mongoCityRepository,jpaCityRepository org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2019-01-10 13:37:47,610/CST][main][INFO]Closing JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:548)
[2019-01-10 13:37:47,617/CST][main][WARN]Error handling failed (Error creating bean with name 'org.apache.servicecomb.core.CseApplicationListener#0' defined in URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.config.internalTransactionAdvisor' defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]: Factory method 'transactionAdvisor' threw exception; nested exception is java.lang.NullPointerException) org.springframework.boot.SpringApplicationRunListeners.callFinishedListener(SpringApplicationRunListeners.java:91)
[2019-01-10 13:37:47,624/CST][main][ERROR]

***************************
APPLICATION FAILED TO START
***************************

Description:

Field cityDaoImpl in pw.cdmi.aws.geo.service.impl.GeoServiceImpl required a single bean, but 2 were found:
	- mongoCityRepository: defined in null
	- jpaCityRepository: defined in null


Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed
 org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:42)
[2019-01-10 13:39:52,192/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 13:39:53,429/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83: startup date [Thu Jan 10 13:39:53 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:39:53,845/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:39:54,171/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:39:54,240/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.3.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 13:39:55,114/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:637)
[2019-01-10 13:39:55,150/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2320fa6f: startup date [Thu Jan 10 13:39:55 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:39:56,257/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:39:56,815/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-bizkeeper/1.0.0-m1/handler-bizkeeper-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:39:56,833/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-metrics/1.0.0-m1/foundation-metrics-1.0.0-m1.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:39:56,858/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-loadbalance/1.0.0-m1/handler-loadbalance-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:39:56,889/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/transport-rest-client/1.0.0-m1/transport-rest-client-1.0.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:39:56,902/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-vertx/1.0.0-m1/foundation-vertx-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:39:56,921/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-config/1.0.0-m1/foundation-config-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:39:56,960/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:39:57,161/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:39:57,696/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:39:57,794/CST][main][INFO]Overriding bean definition for bean 'mongoDistrictRepositories' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:39:57,799/CST][main][INFO]Overriding bean definition for bean 'mongoProvinceRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:39:57,814/CST][main][INFO]Overriding bean definition for bean 'mongoCityRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:39:57,865/CST][main][INFO]Overriding bean definition for bean 'mongoCountryRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:39:57,896/CST][main][INFO]Overriding bean definition for bean 'mongoTownRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:39:58,127/CST][main][WARN]Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses(ConfigurationClassPostProcessor.java:373)
[2019-01-10 13:39:58,500/CST][main][INFO]BeanFactory id=54640162-711d-386a-8f3f-063952aca670 org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263)
[2019-01-10 13:39:58,575/CST][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2019-01-10 13:39:58,576/CST][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2019-01-10 13:39:58,590/CST][main][INFO]create dynamic config: org.apache.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:169)
[2019-01-10 13:39:58,615/CST][main][INFO]create local config: org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:87)
[2019-01-10 13:39:58,616/CST][main][INFO] file:/D:/2.JSpace/cdmi-dev-all/cdmi-geo-server/target/classes/microservice.yaml. org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:89)
[2019-01-10 13:39:58,702/CST][main][INFO]Can not get the SPI service, the interface type is: interface org.apache.servicecomb.config.spi.ConfigCenterConfigurationSource org.apache.servicecomb.foundation.common.utils.SPIServiceUtils.getTargetService(SPIServiceUtils.java:54)
[2019-01-10 13:39:58,704/CST][main][INFO]config center SPI service can not find, skip to load configuration from config center org.apache.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:154)
[2019-01-10 13:39:59,321/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:39:59,726/CST][main][INFO]Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8ca99567] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:39:59,862/CST][main][INFO]Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:40:00,928/CST][main][INFO]Building JPA container EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:349)
[2019-01-10 13:40:00,957/CST][main][INFO]HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
[2019-01-10 13:40:01,190/CST][main][INFO]HHH000412: Hibernate Core {5.0.12.Final} org.hibernate.Version.logVersion(Version.java:37)
[2019-01-10 13:40:01,194/CST][main][INFO]HHH000206: hibernate.properties not found org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
[2019-01-10 13:40:01,196/CST][main][INFO]HHH000021: Bytecode provider name : javassist org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
[2019-01-10 13:40:01,283/CST][main][INFO]HCANN000001: Hibernate Commons Annotations {5.0.1.Final} org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
[2019-01-10 13:40:01,704/CST][main][INFO]HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
[2019-01-10 13:40:02,716/CST][main][INFO]HHH000228: Running hbm2ddl schema update org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:105)
[2019-01-10 13:40:03,086/CST][main][INFO]Initialized JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:379)
[2019-01-10 13:40:03,146/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoResource': Unsatisfied dependency expressed through field 'geoService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoServiceImpl': Unsatisfied dependency expressed through field 'cityDaoImpl'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'pw.cdmi.aws.geo.repositories.CityRepository' available: expected single matching bean but found 2: mongoCityRepository,jpaCityRepository org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2019-01-10 13:40:03,146/CST][main][INFO]Closing JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:548)
[2019-01-10 13:40:03,155/CST][main][WARN]Error handling failed (Error creating bean with name 'org.apache.servicecomb.core.CseApplicationListener#0' defined in URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.config.internalTransactionAdvisor' defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]: Factory method 'transactionAdvisor' threw exception; nested exception is java.lang.NullPointerException) org.springframework.boot.SpringApplicationRunListeners.callFinishedListener(SpringApplicationRunListeners.java:91)
[2019-01-10 13:40:03,161/CST][main][ERROR]

***************************
APPLICATION FAILED TO START
***************************

Description:

Field cityDaoImpl in pw.cdmi.aws.geo.service.impl.GeoServiceImpl required a single bean, but 2 were found:
	- mongoCityRepository: defined in null
	- jpaCityRepository: defined in null


Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed
 org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:42)
[2019-01-10 13:41:12,825/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 13:41:13,996/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83: startup date [Thu Jan 10 13:41:13 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:41:14,389/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:41:14,565/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:41:14,660/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.3.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 13:41:15,529/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:637)
[2019-01-10 13:41:15,567/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@8c11eee: startup date [Thu Jan 10 13:41:15 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:41:16,605/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:41:17,208/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:41:17,264/CST][main][INFO]Overriding bean definition for bean 'mongoCityRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:41:17,276/CST][main][INFO]Overriding bean definition for bean 'mongoTownRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:41:17,282/CST][main][INFO]Overriding bean definition for bean 'mongoDistrictRepositories' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:41:17,288/CST][main][INFO]Overriding bean definition for bean 'mongoProvinceRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:41:17,299/CST][main][INFO]Overriding bean definition for bean 'mongoCountryRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:41:17,423/CST][main][WARN]Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses(ConfigurationClassPostProcessor.java:373)
[2019-01-10 13:41:17,771/CST][main][INFO]BeanFactory id=ae7c5b1e-1e2c-34db-9ec2-25dce2077949 org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263)
[2019-01-10 13:41:17,811/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:41:18,181/CST][main][INFO]Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8ca99567] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:41:18,304/CST][main][INFO]Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:41:19,179/CST][main][INFO]Building JPA container EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:349)
[2019-01-10 13:41:19,210/CST][main][INFO]HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
[2019-01-10 13:41:19,389/CST][main][INFO]HHH000412: Hibernate Core {5.0.12.Final} org.hibernate.Version.logVersion(Version.java:37)
[2019-01-10 13:41:19,397/CST][main][INFO]HHH000206: hibernate.properties not found org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
[2019-01-10 13:41:19,399/CST][main][INFO]HHH000021: Bytecode provider name : javassist org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
[2019-01-10 13:41:19,475/CST][main][INFO]HCANN000001: Hibernate Commons Annotations {5.0.1.Final} org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
[2019-01-10 13:41:19,743/CST][main][INFO]HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
[2019-01-10 13:41:20,836/CST][main][INFO]HHH000228: Running hbm2ddl schema update org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:105)
[2019-01-10 13:41:21,112/CST][main][INFO]Initialized JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:379)
[2019-01-10 13:41:21,197/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoResource': Unsatisfied dependency expressed through field 'geoService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoServiceImpl': Unsatisfied dependency expressed through field 'cityDaoImpl'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'pw.cdmi.aws.geo.repositories.CityRepository' available: expected single matching bean but found 2: mongoCityRepository,jpaCityRepository org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2019-01-10 13:41:21,197/CST][main][INFO]Closing JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:548)
[2019-01-10 13:41:21,220/CST][main][INFO]

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled. org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer.logAutoConfigurationReport(AutoConfigurationReportLoggingInitializer.java:101)
[2019-01-10 13:41:21,231/CST][main][ERROR]

***************************
APPLICATION FAILED TO START
***************************

Description:

Field cityDaoImpl in pw.cdmi.aws.geo.service.impl.GeoServiceImpl required a single bean, but 2 were found:
	- mongoCityRepository: defined in null
	- jpaCityRepository: defined in null


Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed
 org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:42)
[2019-01-10 13:43:02,871/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 13:43:04,052/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83: startup date [Thu Jan 10 13:43:04 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:43:04,424/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:43:04,614/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:43:04,702/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.3.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 13:43:05,513/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:637)
[2019-01-10 13:43:05,549/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3b0c9195: startup date [Thu Jan 10 13:43:05 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:43:06,460/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:43:06,924/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:43:06,973/CST][main][INFO]Overriding bean definition for bean 'mongoDistrictRepositories' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:43:06,979/CST][main][INFO]Overriding bean definition for bean 'mongoCityRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:43:06,991/CST][main][INFO]Overriding bean definition for bean 'mongoTownRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:43:07,004/CST][main][INFO]Overriding bean definition for bean 'mongoProvinceRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:43:07,008/CST][main][INFO]Overriding bean definition for bean 'mongoCountryRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:43:07,115/CST][main][WARN]Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses(ConfigurationClassPostProcessor.java:373)
[2019-01-10 13:43:07,371/CST][main][INFO]BeanFactory id=ae7c5b1e-1e2c-34db-9ec2-25dce2077949 org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263)
[2019-01-10 13:43:07,414/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:43:07,652/CST][main][INFO]Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8ca99567] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:43:07,707/CST][main][INFO]Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:43:08,542/CST][main][INFO]Building JPA container EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:349)
[2019-01-10 13:43:08,573/CST][main][INFO]HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
[2019-01-10 13:43:08,710/CST][main][INFO]HHH000412: Hibernate Core {5.0.12.Final} org.hibernate.Version.logVersion(Version.java:37)
[2019-01-10 13:43:08,716/CST][main][INFO]HHH000206: hibernate.properties not found org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
[2019-01-10 13:43:08,719/CST][main][INFO]HHH000021: Bytecode provider name : javassist org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
[2019-01-10 13:43:08,817/CST][main][INFO]HCANN000001: Hibernate Commons Annotations {5.0.1.Final} org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
[2019-01-10 13:43:09,019/CST][main][INFO]HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
[2019-01-10 13:43:09,954/CST][main][INFO]HHH000228: Running hbm2ddl schema update org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:105)
[2019-01-10 13:43:10,226/CST][main][INFO]Initialized JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:379)
[2019-01-10 13:43:10,287/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoResource': Unsatisfied dependency expressed through field 'geoService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoServiceImpl': Unsatisfied dependency expressed through field 'cityDaoImpl'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'pw.cdmi.aws.geo.repositories.CityRepository' available: expected single matching bean but found 2: mongoCityRepository,jpaCityRepository org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2019-01-10 13:43:10,287/CST][main][INFO]Closing JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:548)
[2019-01-10 13:43:10,305/CST][main][INFO]

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled. org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer.logAutoConfigurationReport(AutoConfigurationReportLoggingInitializer.java:101)
[2019-01-10 13:43:10,315/CST][main][ERROR]

***************************
APPLICATION FAILED TO START
***************************

Description:

Field cityDaoImpl in pw.cdmi.aws.geo.service.impl.GeoServiceImpl required a single bean, but 2 were found:
	- mongoCityRepository: defined in null
	- jpaCityRepository: defined in null


Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed
 org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:42)
[2019-01-10 13:44:19,118/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 13:44:20,366/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83: startup date [Thu Jan 10 13:44:20 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:44:20,733/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:44:20,908/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:44:20,995/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.3.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 13:44:21,831/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:637)
[2019-01-10 13:44:21,855/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@61c9c3fd: startup date [Thu Jan 10 13:44:21 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:44:22,944/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:44:23,366/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:44:23,421/CST][main][INFO]Overriding bean definition for bean 'mongoProvinceRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:44:23,428/CST][main][INFO]Overriding bean definition for bean 'mongoCountryRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:44:23,433/CST][main][INFO]Overriding bean definition for bean 'mongoDistrictRepositories' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:44:23,452/CST][main][INFO]Overriding bean definition for bean 'mongoCityRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:44:23,463/CST][main][INFO]Overriding bean definition for bean 'mongoTownRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:44:23,611/CST][main][WARN]Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses(ConfigurationClassPostProcessor.java:373)
[2019-01-10 13:44:23,813/CST][main][INFO]BeanFactory id=f5226881-01e2-3076-b39e-e8fc24dce615 org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263)
[2019-01-10 13:44:23,900/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:44:24,211/CST][main][INFO]Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8ca99567] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:44:24,273/CST][main][INFO]Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:44:25,140/CST][main][INFO]Building JPA container EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:349)
[2019-01-10 13:44:25,170/CST][main][INFO]HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
[2019-01-10 13:44:25,287/CST][main][INFO]HHH000412: Hibernate Core {5.0.12.Final} org.hibernate.Version.logVersion(Version.java:37)
[2019-01-10 13:44:25,289/CST][main][INFO]HHH000206: hibernate.properties not found org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
[2019-01-10 13:44:25,293/CST][main][INFO]HHH000021: Bytecode provider name : javassist org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
[2019-01-10 13:44:25,385/CST][main][INFO]HCANN000001: Hibernate Commons Annotations {5.0.1.Final} org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
[2019-01-10 13:44:25,625/CST][main][INFO]HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
[2019-01-10 13:44:26,532/CST][main][INFO]HHH000228: Running hbm2ddl schema update org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:105)
[2019-01-10 13:44:26,793/CST][main][INFO]Initialized JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:379)
[2019-01-10 13:44:26,851/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoResource': Unsatisfied dependency expressed through field 'geoService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoServiceImpl': Unsatisfied dependency expressed through field 'cityDaoImpl'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'pw.cdmi.aws.geo.repositories.CityRepository' available: expected single matching bean but found 2: mongoCityRepository,jpaCityRepository org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2019-01-10 13:44:26,851/CST][main][INFO]Closing JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:548)
[2019-01-10 13:44:26,867/CST][main][INFO]

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled. org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer.logAutoConfigurationReport(AutoConfigurationReportLoggingInitializer.java:101)
[2019-01-10 13:44:26,875/CST][main][ERROR]

***************************
APPLICATION FAILED TO START
***************************

Description:

Field cityDaoImpl in pw.cdmi.aws.geo.service.impl.GeoServiceImpl required a single bean, but 2 were found:
	- mongoCityRepository: defined in null
	- jpaCityRepository: defined in null


Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed
 org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:42)
[2019-01-10 13:44:37,900/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 13:44:39,060/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83: startup date [Thu Jan 10 13:44:39 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:44:39,419/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:44:39,607/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:44:39,705/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.3.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 13:44:40,585/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:637)
[2019-01-10 13:44:40,602/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2a5b3fee: startup date [Thu Jan 10 13:44:40 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:44:41,729/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:44:42,014/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:44:42,053/CST][main][INFO]Overriding bean definition for bean 'mongoTownRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:44:42,058/CST][main][INFO]Overriding bean definition for bean 'mongoProvinceRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:44:42,062/CST][main][INFO]Overriding bean definition for bean 'jpaProvinceRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:44:42,069/CST][main][INFO]Overriding bean definition for bean 'jpaTownRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:44:42,077/CST][main][INFO]Overriding bean definition for bean 'jpaCountryRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:44:42,082/CST][main][INFO]Overriding bean definition for bean 'mongoDistrictRepositories' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:44:42,086/CST][main][INFO]Overriding bean definition for bean 'mongoCountryRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:44:42,091/CST][main][INFO]Overriding bean definition for bean 'mongoCityRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:44:42,097/CST][main][INFO]Overriding bean definition for bean 'jpaCityRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:44:42,106/CST][main][INFO]Overriding bean definition for bean 'jpaDistrictRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:44:42,313/CST][main][WARN]Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses(ConfigurationClassPostProcessor.java:373)
[2019-01-10 13:44:42,610/CST][main][INFO]BeanFactory id=1f1a5b29-1f1b-3108-9f0d-27711935f6fa org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263)
[2019-01-10 13:44:42,663/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:44:42,963/CST][main][INFO]Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8ca99567] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:44:43,034/CST][main][INFO]Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:44:43,977/CST][main][INFO]Building JPA container EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:349)
[2019-01-10 13:44:43,998/CST][main][INFO]HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
[2019-01-10 13:44:44,141/CST][main][INFO]HHH000412: Hibernate Core {5.0.12.Final} org.hibernate.Version.logVersion(Version.java:37)
[2019-01-10 13:44:44,146/CST][main][INFO]HHH000206: hibernate.properties not found org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
[2019-01-10 13:44:44,148/CST][main][INFO]HHH000021: Bytecode provider name : javassist org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
[2019-01-10 13:44:44,255/CST][main][INFO]HCANN000001: Hibernate Commons Annotations {5.0.1.Final} org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
[2019-01-10 13:44:44,439/CST][main][INFO]HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
[2019-01-10 13:44:45,416/CST][main][INFO]HHH000228: Running hbm2ddl schema update org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:105)
[2019-01-10 13:44:45,685/CST][main][INFO]Initialized JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:379)
[2019-01-10 13:44:45,739/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoResource': Unsatisfied dependency expressed through field 'geoService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoServiceImpl': Unsatisfied dependency expressed through field 'cityDaoImpl'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'pw.cdmi.aws.geo.repositories.CityRepository' available: expected single matching bean but found 2: jpaCityRepository,mongoCityRepository org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2019-01-10 13:44:45,739/CST][main][INFO]Closing JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:548)
[2019-01-10 13:44:45,757/CST][main][INFO]

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled. org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer.logAutoConfigurationReport(AutoConfigurationReportLoggingInitializer.java:101)
[2019-01-10 13:44:45,768/CST][main][ERROR]

***************************
APPLICATION FAILED TO START
***************************

Description:

Field cityDaoImpl in pw.cdmi.aws.geo.service.impl.GeoServiceImpl required a single bean, but 2 were found:
	- jpaCityRepository: defined in null
	- mongoCityRepository: defined in null


Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed
 org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:42)
[2019-01-10 13:45:09,875/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 13:45:11,122/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83: startup date [Thu Jan 10 13:45:11 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:45:11,521/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:45:11,689/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:45:11,803/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.3.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 13:45:12,624/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:637)
[2019-01-10 13:45:12,636/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@784c3487: startup date [Thu Jan 10 13:45:12 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:45:12,659/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:45:13,272/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-bizkeeper/1.0.0-m1/handler-bizkeeper-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:45:13,307/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-metrics/1.0.0-m1/foundation-metrics-1.0.0-m1.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:45:13,331/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-loadbalance/1.0.0-m1/handler-loadbalance-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:45:13,356/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/transport-rest-client/1.0.0-m1/transport-rest-client-1.0.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:45:13,373/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-vertx/1.0.0-m1/foundation-vertx-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:45:13,402/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-config/1.0.0-m1/foundation-config-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:45:13,418/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:45:13,655/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:45:13,984/CST][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2019-01-10 13:45:13,985/CST][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2019-01-10 13:45:13,991/CST][main][INFO]create dynamic config: org.apache.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:169)
[2019-01-10 13:45:13,999/CST][main][INFO]create local config: org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:87)
[2019-01-10 13:45:13,999/CST][main][INFO] file:/D:/2.JSpace/cdmi-dev-all/cdmi-geo-server/target/classes/microservice.yaml. org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:89)
[2019-01-10 13:45:14,018/CST][main][INFO]Can not get the SPI service, the interface type is: interface org.apache.servicecomb.config.spi.ConfigCenterConfigurationSource org.apache.servicecomb.foundation.common.utils.SPIServiceUtils.getTargetService(SPIServiceUtils.java:54)
[2019-01-10 13:45:14,018/CST][main][INFO]config center SPI service can not find, skip to load configuration from config center org.apache.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:154)
[2019-01-10 13:45:14,207/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:45:14,531/CST][main][INFO]Found swagger generator context: org.apache.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext org.apache.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2019-01-10 13:45:14,531/CST][main][INFO]Found swagger generator context: org.apache.servicecomb.swagger.generator.jaxrs.JaxrsSwaggerGeneratorContext org.apache.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2019-01-10 13:45:14,532/CST][main][INFO]Found swagger generator context: org.apache.servicecomb.swagger.generator.pojo.PojoSwaggerGeneratorContext org.apache.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2019-01-10 13:45:14,553/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.springmvc.response.SpringmvcProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 13:45:14,554/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.producer.CseResponseProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 13:45:14,555/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.producer.CompletableFutureProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 13:45:14,555/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.jaxrs.response.JaxrsProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 13:45:14,556/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.producer.DefaultProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 13:45:14,562/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.springmvc.response.SpringmvcConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 13:45:14,563/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.consumer.CseResponseConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 13:45:14,564/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.consumer.CompletableFutureConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 13:45:14,564/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.jaxrs.response.JaxrsConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 13:45:14,565/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.consumer.DefaultConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 13:45:15,532/CST][main][INFO]load microservice config, name=cdmi-geo, paths=[file:/D:/2.JSpace/cdmi-dev-all/cdmi-geo-server/target/classes/microservice.yaml] org.apache.servicecomb.serviceregistry.definition.MicroserviceDefinition.logConfigPath(MicroserviceDefinition.java:142)
[2019-01-10 13:45:15,591/CST][main][INFO]It is running in the normal mode, a separated service registry is required org.apache.servicecomb.serviceregistry.registry.ServiceRegistryFactory.create(ServiceRegistryFactory.java:81)
[2019-01-10 13:45:15,821/CST][main][INFO]add network interface name:eth0,host address:192.168.99.1 org.apache.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:114)
[2019-01-10 13:45:15,832/CST][main][INFO]add network interface name:wlan0,host address:192.168.31.121 org.apache.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:114)
[2019-01-10 13:45:15,885/CST][main][INFO]add network interface name:eth7,host address:192.168.56.1 org.apache.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:114)
[2019-01-10 13:45:15,998/CST][main][INFO]add host name from localhost:LAPTOP-K999KJQI,host address:192.168.99.1 org.apache.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:72)
[2019-01-10 13:45:16,185/CST][main][INFO]executor group 2, thread per group 4. org.apache.servicecomb.core.executor.FixedThreadExecutor.<init>(FixedThreadExecutor.java:54)
[2019-01-10 13:45:16,222/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaMappingContext': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: At least one JPA metamodel must be present! org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2019-01-10 13:45:16,224/CST][main][INFO]

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled. org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer.logAutoConfigurationReport(AutoConfigurationReportLoggingInitializer.java:101)
[2019-01-10 13:45:16,237/CST][main][ERROR]Application startup failed org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:815)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaMappingContext': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: At least one JPA metamodel must be present!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1589)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:554)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:740)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:866)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at pw.cdmi.aws.geo.Application.main(Application.java:34)
Caused by: java.lang.IllegalArgumentException: At least one JPA metamodel must be present!
	at org.springframework.util.Assert.notEmpty(Assert.java:277)
	at org.springframework.data.jpa.mapping.JpaMetamodelMappingContext.<init>(JpaMetamodelMappingContext.java:52)
	at org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean.createInstance(JpaMetamodelMappingContextFactoryBean.java:71)
	at org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean.createInstance(JpaMetamodelMappingContextFactoryBean.java:26)
	at org.springframework.beans.factory.config.AbstractFactoryBean.afterPropertiesSet(AbstractFactoryBean.java:134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1585)
	... 15 more
[2019-01-10 13:47:09,408/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 13:47:10,544/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83: startup date [Thu Jan 10 13:47:10 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:47:10,929/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:47:11,111/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:47:11,211/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.3.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 13:47:12,021/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:637)
[2019-01-10 13:47:12,048/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2d36e77e: startup date [Thu Jan 10 13:47:12 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:47:12,912/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:47:13,452/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-bizkeeper/1.0.0-m1/handler-bizkeeper-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:47:13,472/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-metrics/1.0.0-m1/foundation-metrics-1.0.0-m1.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:47:13,488/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-loadbalance/1.0.0-m1/handler-loadbalance-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:47:13,503/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/transport-rest-client/1.0.0-m1/transport-rest-client-1.0.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:47:13,517/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-vertx/1.0.0-m1/foundation-vertx-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:47:13,532/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-config/1.0.0-m1/foundation-config-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:47:13,544/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:47:13,706/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:47:14,256/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:47:14,305/CST][main][INFO]Overriding bean definition for bean 'mongoProvinceRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:47:14,321/CST][main][INFO]Overriding bean definition for bean 'mongoCityRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:47:14,332/CST][main][INFO]Overriding bean definition for bean 'mongoTownRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:47:14,342/CST][main][INFO]Overriding bean definition for bean 'mongoDistrictRepositories' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:47:14,349/CST][main][INFO]Overriding bean definition for bean 'mongoCountryRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:47:14,545/CST][main][WARN]Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses(ConfigurationClassPostProcessor.java:373)
[2019-01-10 13:47:14,801/CST][main][INFO]BeanFactory id=9ed706fb-9830-3d93-b563-0923e28a10f7 org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263)
[2019-01-10 13:47:14,874/CST][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2019-01-10 13:47:14,874/CST][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2019-01-10 13:47:14,882/CST][main][INFO]create dynamic config: org.apache.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:169)
[2019-01-10 13:47:14,892/CST][main][INFO]create local config: org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:87)
[2019-01-10 13:47:14,893/CST][main][INFO] file:/D:/2.JSpace/cdmi-dev-all/cdmi-geo-server/target/classes/microservice.yaml. org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:89)
[2019-01-10 13:47:14,915/CST][main][INFO]Can not get the SPI service, the interface type is: interface org.apache.servicecomb.config.spi.ConfigCenterConfigurationSource org.apache.servicecomb.foundation.common.utils.SPIServiceUtils.getTargetService(SPIServiceUtils.java:54)
[2019-01-10 13:47:14,916/CST][main][INFO]config center SPI service can not find, skip to load configuration from config center org.apache.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:154)
[2019-01-10 13:47:15,455/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:47:15,830/CST][main][INFO]Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8ca99567] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:47:15,919/CST][main][INFO]Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:47:16,945/CST][main][INFO]Building JPA container EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:349)
[2019-01-10 13:47:16,965/CST][main][INFO]HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
[2019-01-10 13:47:17,066/CST][main][INFO]HHH000412: Hibernate Core {5.0.12.Final} org.hibernate.Version.logVersion(Version.java:37)
[2019-01-10 13:47:17,070/CST][main][INFO]HHH000206: hibernate.properties not found org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
[2019-01-10 13:47:17,073/CST][main][INFO]HHH000021: Bytecode provider name : javassist org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
[2019-01-10 13:47:17,154/CST][main][INFO]HCANN000001: Hibernate Commons Annotations {5.0.1.Final} org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
[2019-01-10 13:47:17,399/CST][main][INFO]HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
[2019-01-10 13:47:18,190/CST][main][INFO]HHH000228: Running hbm2ddl schema update org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:105)
[2019-01-10 13:47:18,468/CST][main][INFO]Initialized JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:379)
[2019-01-10 13:47:18,524/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoResource': Unsatisfied dependency expressed through field 'geoService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoServiceImpl': Unsatisfied dependency expressed through field 'cityDaoImpl'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'pw.cdmi.aws.geo.repositories.CityRepository' available: expected single matching bean but found 2: mongoCityRepository,jpaCityRepository org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2019-01-10 13:47:18,525/CST][main][INFO]Closing JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:548)
[2019-01-10 13:47:18,532/CST][main][WARN]Error handling failed (Error creating bean with name 'org.apache.servicecomb.core.CseApplicationListener#0' defined in URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.config.internalTransactionAdvisor' defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]: Factory method 'transactionAdvisor' threw exception; nested exception is java.lang.NullPointerException) org.springframework.boot.SpringApplicationRunListeners.callFinishedListener(SpringApplicationRunListeners.java:91)
[2019-01-10 13:47:18,540/CST][main][ERROR]

***************************
APPLICATION FAILED TO START
***************************

Description:

Field cityDaoImpl in pw.cdmi.aws.geo.service.impl.GeoServiceImpl required a single bean, but 2 were found:
	- mongoCityRepository: defined in null
	- jpaCityRepository: defined in null


Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed
 org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:42)
[2019-01-10 13:48:16,827/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 13:48:18,031/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83: startup date [Thu Jan 10 13:48:18 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:48:18,407/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:48:18,616/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:48:18,717/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.3.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 13:48:19,571/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:637)
[2019-01-10 13:48:19,611/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3b0c9195: startup date [Thu Jan 10 13:48:19 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:48:20,593/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:48:21,140/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-bizkeeper/1.0.0-m1/handler-bizkeeper-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:48:21,157/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-metrics/1.0.0-m1/foundation-metrics-1.0.0-m1.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:48:21,173/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-loadbalance/1.0.0-m1/handler-loadbalance-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:48:21,188/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/transport-rest-client/1.0.0-m1/transport-rest-client-1.0.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:48:21,204/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-vertx/1.0.0-m1/foundation-vertx-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:48:21,217/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-config/1.0.0-m1/foundation-config-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:48:21,230/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:48:21,382/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:48:21,892/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:48:21,940/CST][main][INFO]Overriding bean definition for bean 'mongoCountryRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:48:21,949/CST][main][INFO]Overriding bean definition for bean 'mongoCityRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:48:21,953/CST][main][INFO]Overriding bean definition for bean 'mongoProvinceRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:48:21,975/CST][main][INFO]Overriding bean definition for bean 'mongoTownRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:48:21,980/CST][main][INFO]Overriding bean definition for bean 'mongoDistrictRepositories' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:48:22,198/CST][main][WARN]Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses(ConfigurationClassPostProcessor.java:373)
[2019-01-10 13:48:22,435/CST][main][INFO]BeanFactory id=9ed706fb-9830-3d93-b563-0923e28a10f7 org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263)
[2019-01-10 13:48:22,481/CST][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2019-01-10 13:48:22,481/CST][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2019-01-10 13:48:22,490/CST][main][INFO]create dynamic config: org.apache.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:169)
[2019-01-10 13:48:22,499/CST][main][INFO]create local config: org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:87)
[2019-01-10 13:48:22,499/CST][main][INFO] file:/D:/2.JSpace/cdmi-dev-all/cdmi-geo-server/target/classes/microservice.yaml. org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:89)
[2019-01-10 13:48:22,516/CST][main][INFO]Can not get the SPI service, the interface type is: interface org.apache.servicecomb.config.spi.ConfigCenterConfigurationSource org.apache.servicecomb.foundation.common.utils.SPIServiceUtils.getTargetService(SPIServiceUtils.java:54)
[2019-01-10 13:48:22,517/CST][main][INFO]config center SPI service can not find, skip to load configuration from config center org.apache.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:154)
[2019-01-10 13:48:22,812/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:48:23,162/CST][main][INFO]Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8ca99567] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:48:23,255/CST][main][INFO]Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:48:24,239/CST][main][INFO]Building JPA container EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:349)
[2019-01-10 13:48:24,261/CST][main][INFO]HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
[2019-01-10 13:48:24,383/CST][main][INFO]HHH000412: Hibernate Core {5.0.12.Final} org.hibernate.Version.logVersion(Version.java:37)
[2019-01-10 13:48:24,386/CST][main][INFO]HHH000206: hibernate.properties not found org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
[2019-01-10 13:48:24,389/CST][main][INFO]HHH000021: Bytecode provider name : javassist org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
[2019-01-10 13:48:24,497/CST][main][INFO]HCANN000001: Hibernate Commons Annotations {5.0.1.Final} org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
[2019-01-10 13:48:24,717/CST][main][INFO]HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
[2019-01-10 13:48:25,598/CST][main][INFO]HHH000228: Running hbm2ddl schema update org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:105)
[2019-01-10 13:48:25,898/CST][main][INFO]Initialized JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:379)
[2019-01-10 13:48:25,961/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoResource': Unsatisfied dependency expressed through field 'geoService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoServiceImpl': Unsatisfied dependency expressed through field 'cityDaoImpl'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'pw.cdmi.aws.geo.repositories.CityRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=MongoCityRepository)} org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2019-01-10 13:48:25,962/CST][main][INFO]Closing JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:548)
[2019-01-10 13:48:25,969/CST][main][WARN]Error handling failed (Error creating bean with name 'org.apache.servicecomb.core.CseApplicationListener#0' defined in URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.config.internalTransactionAdvisor' defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]: Factory method 'transactionAdvisor' threw exception; nested exception is java.lang.NullPointerException) org.springframework.boot.SpringApplicationRunListeners.callFinishedListener(SpringApplicationRunListeners.java:91)
[2019-01-10 13:48:26,298/CST][main][ERROR]

***************************
APPLICATION FAILED TO START
***************************

Description:

Field cityDaoImpl in pw.cdmi.aws.geo.service.impl.GeoServiceImpl required a bean of type 'pw.cdmi.aws.geo.repositories.CityRepository' that could not be found.


Action:

Consider defining a bean of type 'pw.cdmi.aws.geo.repositories.CityRepository' in your configuration.
 org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:42)
[2019-01-10 13:51:07,860/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 13:51:09,036/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83: startup date [Thu Jan 10 13:51:09 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:51:09,383/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:51:09,569/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:51:09,673/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.3.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 13:51:10,466/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:637)
[2019-01-10 13:51:10,496/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3668d4: startup date [Thu Jan 10 13:51:10 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:51:11,337/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:51:11,895/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-bizkeeper/1.0.0-m1/handler-bizkeeper-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:51:11,912/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-metrics/1.0.0-m1/foundation-metrics-1.0.0-m1.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:51:11,928/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-loadbalance/1.0.0-m1/handler-loadbalance-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:51:11,942/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/transport-rest-client/1.0.0-m1/transport-rest-client-1.0.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:51:11,962/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-vertx/1.0.0-m1/foundation-vertx-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:51:11,977/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-config/1.0.0-m1/foundation-config-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:51:11,991/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:51:12,162/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:51:12,669/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:51:12,719/CST][main][INFO]Overriding bean definition for bean 'mongoProvinceRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:51:12,738/CST][main][INFO]Overriding bean definition for bean 'mongoCountryRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:51:12,743/CST][main][INFO]Overriding bean definition for bean 'mongoDistrictRepositories' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:51:12,751/CST][main][INFO]Overriding bean definition for bean 'mongoTownRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:51:12,756/CST][main][INFO]Overriding bean definition for bean 'mongoCityRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:51:12,987/CST][main][WARN]Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses(ConfigurationClassPostProcessor.java:373)
[2019-01-10 13:51:13,183/CST][main][INFO]BeanFactory id=9ed706fb-9830-3d93-b563-0923e28a10f7 org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263)
[2019-01-10 13:51:13,243/CST][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2019-01-10 13:51:13,243/CST][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2019-01-10 13:51:13,253/CST][main][INFO]create dynamic config: org.apache.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:169)
[2019-01-10 13:51:13,267/CST][main][INFO]create local config: org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:87)
[2019-01-10 13:51:13,268/CST][main][INFO] file:/D:/2.JSpace/cdmi-dev-all/cdmi-geo-server/target/classes/microservice.yaml. org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:89)
[2019-01-10 13:51:13,306/CST][main][INFO]Can not get the SPI service, the interface type is: interface org.apache.servicecomb.config.spi.ConfigCenterConfigurationSource org.apache.servicecomb.foundation.common.utils.SPIServiceUtils.getTargetService(SPIServiceUtils.java:54)
[2019-01-10 13:51:13,306/CST][main][INFO]config center SPI service can not find, skip to load configuration from config center org.apache.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:154)
[2019-01-10 13:51:13,746/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:51:14,302/CST][main][INFO]Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8ca99567] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:51:14,430/CST][main][INFO]Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:51:15,665/CST][main][INFO]Building JPA container EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:349)
[2019-01-10 13:51:15,688/CST][main][INFO]HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
[2019-01-10 13:51:15,833/CST][main][INFO]HHH000412: Hibernate Core {5.0.12.Final} org.hibernate.Version.logVersion(Version.java:37)
[2019-01-10 13:51:15,838/CST][main][INFO]HHH000206: hibernate.properties not found org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
[2019-01-10 13:51:15,843/CST][main][INFO]HHH000021: Bytecode provider name : javassist org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
[2019-01-10 13:51:15,951/CST][main][INFO]HCANN000001: Hibernate Commons Annotations {5.0.1.Final} org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
[2019-01-10 13:51:16,203/CST][main][INFO]HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
[2019-01-10 13:51:17,347/CST][main][INFO]HHH000228: Running hbm2ddl schema update org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:105)
[2019-01-10 13:51:17,632/CST][main][INFO]Initialized JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:379)
[2019-01-10 13:51:17,700/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoResource': Unsatisfied dependency expressed through field 'geoService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoServiceImpl': Unsatisfied dependency expressed through field 'cityDaoImpl'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'pw.cdmi.aws.geo.repositories.CityRepository' available: expected single matching bean but found 2: mongoCityRepository,jpaCityRepository org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2019-01-10 13:51:17,700/CST][main][INFO]Closing JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:548)
[2019-01-10 13:51:17,709/CST][main][WARN]Error handling failed (Error creating bean with name 'org.apache.servicecomb.core.CseApplicationListener#0' defined in URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.config.internalTransactionAdvisor' defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]: Factory method 'transactionAdvisor' threw exception; nested exception is java.lang.NullPointerException) org.springframework.boot.SpringApplicationRunListeners.callFinishedListener(SpringApplicationRunListeners.java:91)
[2019-01-10 13:51:17,716/CST][main][ERROR]

***************************
APPLICATION FAILED TO START
***************************

Description:

Field cityDaoImpl in pw.cdmi.aws.geo.service.impl.GeoServiceImpl required a single bean, but 2 were found:
	- mongoCityRepository: defined in null
	- jpaCityRepository: defined in null


Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed
 org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:42)
[2019-01-10 13:51:40,571/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 13:51:41,796/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83: startup date [Thu Jan 10 13:51:41 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:51:42,161/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:51:42,368/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:51:42,487/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.3.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 13:51:43,316/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:637)
[2019-01-10 13:51:43,349/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3668d4: startup date [Thu Jan 10 13:51:43 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:51:44,279/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:51:44,849/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-bizkeeper/1.0.0-m1/handler-bizkeeper-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:51:44,866/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-metrics/1.0.0-m1/foundation-metrics-1.0.0-m1.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:51:44,884/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-loadbalance/1.0.0-m1/handler-loadbalance-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:51:44,899/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/transport-rest-client/1.0.0-m1/transport-rest-client-1.0.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:51:44,917/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-vertx/1.0.0-m1/foundation-vertx-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:51:44,932/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-config/1.0.0-m1/foundation-config-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:51:44,946/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 13:51:45,121/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:51:45,528/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:51:45,836/CST][main][WARN]Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses(ConfigurationClassPostProcessor.java:373)
[2019-01-10 13:51:46,093/CST][main][INFO]BeanFactory id=82001810-38ed-3319-afde-add6dbb577d7 org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263)
[2019-01-10 13:51:46,138/CST][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2019-01-10 13:51:46,139/CST][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2019-01-10 13:51:46,146/CST][main][INFO]create dynamic config: org.apache.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:169)
[2019-01-10 13:51:46,155/CST][main][INFO]create local config: org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:87)
[2019-01-10 13:51:46,156/CST][main][INFO] file:/D:/2.JSpace/cdmi-dev-all/cdmi-geo-server/target/classes/microservice.yaml. org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:89)
[2019-01-10 13:51:46,172/CST][main][INFO]Can not get the SPI service, the interface type is: interface org.apache.servicecomb.config.spi.ConfigCenterConfigurationSource org.apache.servicecomb.foundation.common.utils.SPIServiceUtils.getTargetService(SPIServiceUtils.java:54)
[2019-01-10 13:51:46,173/CST][main][INFO]config center SPI service can not find, skip to load configuration from config center org.apache.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:154)
[2019-01-10 13:51:46,439/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:51:46,749/CST][main][INFO]Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8ca99567] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:51:46,824/CST][main][INFO]Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:51:47,739/CST][main][INFO]Building JPA container EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:349)
[2019-01-10 13:51:47,764/CST][main][INFO]HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
[2019-01-10 13:51:47,966/CST][main][INFO]HHH000412: Hibernate Core {5.0.12.Final} org.hibernate.Version.logVersion(Version.java:37)
[2019-01-10 13:51:47,982/CST][main][INFO]HHH000206: hibernate.properties not found org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
[2019-01-10 13:51:47,986/CST][main][INFO]HHH000021: Bytecode provider name : javassist org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
[2019-01-10 13:51:48,071/CST][main][INFO]HCANN000001: Hibernate Commons Annotations {5.0.1.Final} org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
[2019-01-10 13:51:48,304/CST][main][INFO]HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
[2019-01-10 13:51:49,183/CST][main][INFO]HHH000228: Running hbm2ddl schema update org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:105)
[2019-01-10 13:51:49,462/CST][main][INFO]Initialized JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:379)
[2019-01-10 13:51:49,519/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoResource': Unsatisfied dependency expressed through field 'geoService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoServiceImpl': Unsatisfied dependency expressed through field 'cityDaoImpl'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'pw.cdmi.aws.geo.repositories.CityRepository' available: expected single matching bean but found 2: jpaCityRepository,mongoCityRepository org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2019-01-10 13:51:49,519/CST][main][INFO]Closing JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:548)
[2019-01-10 13:51:49,531/CST][main][WARN]Error handling failed (Error creating bean with name 'org.apache.servicecomb.core.CseApplicationListener#0' defined in URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.config.internalTransactionAdvisor' defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]: Factory method 'transactionAdvisor' threw exception; nested exception is java.lang.NullPointerException) org.springframework.boot.SpringApplicationRunListeners.callFinishedListener(SpringApplicationRunListeners.java:91)
[2019-01-10 13:51:49,538/CST][main][ERROR]

***************************
APPLICATION FAILED TO START
***************************

Description:

Field cityDaoImpl in pw.cdmi.aws.geo.service.impl.GeoServiceImpl required a single bean, but 2 were found:
	- jpaCityRepository: defined in null
	- mongoCityRepository: defined in null


Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed
 org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:42)
[2019-01-10 13:52:24,164/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 13:52:25,315/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83: startup date [Thu Jan 10 13:52:25 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:52:25,669/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:52:25,888/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:52:26,000/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.3.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 13:52:26,826/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:637)
[2019-01-10 13:52:26,842/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@555cf22: startup date [Thu Jan 10 13:52:26 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:52:26,996/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:52:27,023/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:52:27,092/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaMappingContext': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: At least one JPA metamodel must be present! org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2019-01-10 13:52:27,105/CST][main][ERROR]Application startup failed org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:815)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaMappingContext': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: At least one JPA metamodel must be present!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1589)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:554)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:740)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:866)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at pw.cdmi.aws.geo.Application.main(Application.java:34)
Caused by: java.lang.IllegalArgumentException: At least one JPA metamodel must be present!
	at org.springframework.util.Assert.notEmpty(Assert.java:277)
	at org.springframework.data.jpa.mapping.JpaMetamodelMappingContext.<init>(JpaMetamodelMappingContext.java:52)
	at org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean.createInstance(JpaMetamodelMappingContextFactoryBean.java:71)
	at org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean.createInstance(JpaMetamodelMappingContextFactoryBean.java:26)
	at org.springframework.beans.factory.config.AbstractFactoryBean.afterPropertiesSet(AbstractFactoryBean.java:134)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1648)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1585)
	... 15 more
[2019-01-10 13:52:46,833/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 13:52:48,149/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83: startup date [Thu Jan 10 13:52:48 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:52:48,521/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:52:48,659/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:52:48,860/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.3.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 13:52:49,798/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:637)
[2019-01-10 13:52:49,829/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4097cac: startup date [Thu Jan 10 13:52:49 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:52:50,900/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:52:51,392/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:52:51,700/CST][main][WARN]Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses(ConfigurationClassPostProcessor.java:373)
[2019-01-10 13:52:51,944/CST][main][INFO]BeanFactory id=fee58a9c-73a6-3e77-9e37-769ac06fba86 org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263)
[2019-01-10 13:52:51,997/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:52:52,342/CST][main][INFO]Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8ca99567] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:52:52,410/CST][main][INFO]Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:52:53,344/CST][main][INFO]Building JPA container EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:349)
[2019-01-10 13:52:53,371/CST][main][INFO]HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
[2019-01-10 13:52:53,470/CST][main][INFO]HHH000412: Hibernate Core {5.0.12.Final} org.hibernate.Version.logVersion(Version.java:37)
[2019-01-10 13:52:53,473/CST][main][INFO]HHH000206: hibernate.properties not found org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
[2019-01-10 13:52:53,475/CST][main][INFO]HHH000021: Bytecode provider name : javassist org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
[2019-01-10 13:52:53,532/CST][main][INFO]HCANN000001: Hibernate Commons Annotations {5.0.1.Final} org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
[2019-01-10 13:52:53,729/CST][main][INFO]HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
[2019-01-10 13:52:54,656/CST][main][INFO]HHH000228: Running hbm2ddl schema update org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:105)
[2019-01-10 13:52:54,915/CST][main][INFO]Initialized JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:379)
[2019-01-10 13:52:54,965/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoResource': Unsatisfied dependency expressed through field 'geoService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoServiceImpl': Unsatisfied dependency expressed through field 'cityDaoImpl'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'pw.cdmi.aws.geo.repositories.CityRepository' available: expected single matching bean but found 2: mongoCityRepository,jpaCityRepository org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2019-01-10 13:52:54,965/CST][main][INFO]Closing JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:548)
[2019-01-10 13:52:54,982/CST][main][INFO]

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled. org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer.logAutoConfigurationReport(AutoConfigurationReportLoggingInitializer.java:101)
[2019-01-10 13:52:54,992/CST][main][ERROR]

***************************
APPLICATION FAILED TO START
***************************

Description:

Field cityDaoImpl in pw.cdmi.aws.geo.service.impl.GeoServiceImpl required a single bean, but 2 were found:
	- mongoCityRepository: defined in null
	- jpaCityRepository: defined in null


Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed
 org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:42)
[2019-01-10 13:54:05,509/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 13:54:06,735/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83: startup date [Thu Jan 10 13:54:06 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:54:07,102/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:54:07,262/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:54:07,373/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.3.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 13:54:08,188/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:637)
[2019-01-10 13:54:08,213/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2c7b5824: startup date [Thu Jan 10 13:54:08 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:54:09,095/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:54:09,490/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:54:09,730/CST][main][WARN]Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses(ConfigurationClassPostProcessor.java:373)
[2019-01-10 13:54:09,943/CST][main][INFO]BeanFactory id=46ce94aa-35de-35e6-8be0-dbff8a07a359 org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263)
[2019-01-10 13:54:10,006/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:54:10,324/CST][main][INFO]Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8ca99567] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:54:10,370/CST][main][INFO]Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:54:11,151/CST][main][INFO]Building JPA container EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:349)
[2019-01-10 13:54:11,174/CST][main][INFO]HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
[2019-01-10 13:54:11,339/CST][main][INFO]HHH000412: Hibernate Core {5.0.12.Final} org.hibernate.Version.logVersion(Version.java:37)
[2019-01-10 13:54:11,345/CST][main][INFO]HHH000206: hibernate.properties not found org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
[2019-01-10 13:54:11,348/CST][main][INFO]HHH000021: Bytecode provider name : javassist org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
[2019-01-10 13:54:11,477/CST][main][INFO]HCANN000001: Hibernate Commons Annotations {5.0.1.Final} org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
[2019-01-10 13:54:11,785/CST][main][INFO]HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
[2019-01-10 13:54:12,979/CST][main][INFO]HHH000228: Running hbm2ddl schema update org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:105)
[2019-01-10 13:54:13,239/CST][main][INFO]Initialized JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:379)
[2019-01-10 13:54:14,371/CST][main][INFO]Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500} com.mongodb.diagnostics.logging.SLF4JLogger.info(SLF4JLogger.java:71)
[2019-01-10 13:54:14,497/CST][cluster-ClusterId{value='5c36de06eba8c0097485030f', description='null'}-localhost:27017][INFO]Opened connection [connectionId{localValue:1, serverValue:1}] to localhost:27017 com.mongodb.diagnostics.logging.SLF4JLogger.info(SLF4JLogger.java:71)
[2019-01-10 13:54:14,501/CST][cluster-ClusterId{value='5c36de06eba8c0097485030f', description='null'}-localhost:27017][INFO]Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 1]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=796318} com.mongodb.diagnostics.logging.SLF4JLogger.info(SLF4JLogger.java:71)
[2019-01-10 13:54:14,928/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoResource': Unsatisfied dependency expressed through field 'geoService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoServiceImpl': Unsatisfied dependency expressed through field 'provinceDaoImpl'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'pw.cdmi.aws.geo.repositories.ProvinceRepository' available: expected single matching bean but found 2: mongoProvinceRepository,jpaProvinceRepository org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2019-01-10 13:54:14,933/CST][main][INFO]Closing JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:548)
[2019-01-10 13:54:14,946/CST][main][INFO]

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled. org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer.logAutoConfigurationReport(AutoConfigurationReportLoggingInitializer.java:101)
[2019-01-10 13:54:14,954/CST][main][ERROR]

***************************
APPLICATION FAILED TO START
***************************

Description:

Field provinceDaoImpl in pw.cdmi.aws.geo.service.impl.GeoServiceImpl required a single bean, but 2 were found:
	- mongoProvinceRepository: defined in null
	- jpaProvinceRepository: defined in null


Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed
 org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:42)
[2019-01-10 13:54:32,292/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 13:54:33,925/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83: startup date [Thu Jan 10 13:54:33 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:54:34,287/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:54:34,469/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:54:34,602/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.3.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 13:54:35,433/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:637)
[2019-01-10 13:54:35,455/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@366c4480: startup date [Thu Jan 10 13:54:35 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:54:36,748/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:54:37,084/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:54:37,125/CST][main][INFO]Overriding bean definition for bean 'jpaTownRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:54:37,129/CST][main][INFO]Overriding bean definition for bean 'mongoTownRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:54:37,133/CST][main][INFO]Overriding bean definition for bean 'mongoCountryRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:54:37,138/CST][main][INFO]Overriding bean definition for bean 'mongoDistrictRepositories' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:54:37,148/CST][main][INFO]Overriding bean definition for bean 'jpaProvinceRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:54:37,151/CST][main][INFO]Overriding bean definition for bean 'jpaCountryRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:54:37,156/CST][main][INFO]Overriding bean definition for bean 'mongoProvinceRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:54:37,162/CST][main][INFO]Overriding bean definition for bean 'mongoCityRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:54:37,166/CST][main][INFO]Overriding bean definition for bean 'jpaDistrictRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 13:54:37,292/CST][main][WARN]Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses(ConfigurationClassPostProcessor.java:373)
[2019-01-10 13:54:37,562/CST][main][INFO]BeanFactory id=e5025dc6-ee85-360e-b401-6d81fe411a3d org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263)
[2019-01-10 13:54:37,603/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:54:37,867/CST][main][INFO]Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8ca99567] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:54:37,928/CST][main][INFO]Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:54:38,724/CST][main][INFO]Building JPA container EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:349)
[2019-01-10 13:54:38,753/CST][main][INFO]HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
[2019-01-10 13:54:38,937/CST][main][INFO]HHH000412: Hibernate Core {5.0.12.Final} org.hibernate.Version.logVersion(Version.java:37)
[2019-01-10 13:54:38,942/CST][main][INFO]HHH000206: hibernate.properties not found org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
[2019-01-10 13:54:38,945/CST][main][INFO]HHH000021: Bytecode provider name : javassist org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
[2019-01-10 13:54:39,022/CST][main][INFO]HCANN000001: Hibernate Commons Annotations {5.0.1.Final} org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
[2019-01-10 13:54:39,230/CST][main][INFO]HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
[2019-01-10 13:54:40,143/CST][main][INFO]HHH000228: Running hbm2ddl schema update org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:105)
[2019-01-10 13:54:40,395/CST][main][INFO]Initialized JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:379)
[2019-01-10 13:54:41,430/CST][main][INFO]Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500} com.mongodb.diagnostics.logging.SLF4JLogger.info(SLF4JLogger.java:71)
[2019-01-10 13:54:41,550/CST][cluster-ClusterId{value='5c36de21eba8c03a0412f8c8', description='null'}-localhost:27017][INFO]Opened connection [connectionId{localValue:1, serverValue:2}] to localhost:27017 com.mongodb.diagnostics.logging.SLF4JLogger.info(SLF4JLogger.java:71)
[2019-01-10 13:54:41,554/CST][cluster-ClusterId{value='5c36de21eba8c03a0412f8c8', description='null'}-localhost:27017][INFO]Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 1]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, roundTripTimeNanos=783481} com.mongodb.diagnostics.logging.SLF4JLogger.info(SLF4JLogger.java:71)
[2019-01-10 13:54:41,969/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoResource': Unsatisfied dependency expressed through field 'geoService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoServiceImpl': Unsatisfied dependency expressed through field 'provinceDaoImpl'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'pw.cdmi.aws.geo.repositories.ProvinceRepository' available: expected single matching bean but found 2: mongoProvinceRepository,jpaProvinceRepository org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2019-01-10 13:54:41,975/CST][main][INFO]Closing JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:548)
[2019-01-10 13:54:41,988/CST][main][INFO]

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled. org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer.logAutoConfigurationReport(AutoConfigurationReportLoggingInitializer.java:101)
[2019-01-10 13:54:41,993/CST][main][ERROR]

***************************
APPLICATION FAILED TO START
***************************

Description:

Field provinceDaoImpl in pw.cdmi.aws.geo.service.impl.GeoServiceImpl required a single bean, but 2 were found:
	- mongoProvinceRepository: defined in null
	- jpaProvinceRepository: defined in null


Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed
 org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:42)
[2019-01-10 13:58:28,386/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 13:58:29,595/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83: startup date [Thu Jan 10 13:58:29 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:58:29,998/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:58:30,171/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:58:30,293/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.3.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 13:58:31,070/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:637)
[2019-01-10 13:58:31,097/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7e8dcdaa: startup date [Thu Jan 10 13:58:31 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 13:58:32,028/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:58:32,438/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 13:58:32,717/CST][main][WARN]Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses(ConfigurationClassPostProcessor.java:373)
[2019-01-10 13:58:32,972/CST][main][INFO]BeanFactory id=f5226881-01e2-3076-b39e-e8fc24dce615 org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263)
[2019-01-10 13:58:33,017/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 13:58:33,263/CST][main][INFO]Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8ca99567] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:58:33,315/CST][main][INFO]Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 13:58:34,080/CST][main][INFO]Building JPA container EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:349)
[2019-01-10 13:58:34,109/CST][main][INFO]HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
[2019-01-10 13:58:34,296/CST][main][INFO]HHH000412: Hibernate Core {5.0.12.Final} org.hibernate.Version.logVersion(Version.java:37)
[2019-01-10 13:58:34,299/CST][main][INFO]HHH000206: hibernate.properties not found org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
[2019-01-10 13:58:34,302/CST][main][INFO]HHH000021: Bytecode provider name : javassist org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
[2019-01-10 13:58:34,378/CST][main][INFO]HCANN000001: Hibernate Commons Annotations {5.0.1.Final} org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
[2019-01-10 13:58:34,608/CST][main][INFO]HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
[2019-01-10 13:58:35,729/CST][main][INFO]HHH000228: Running hbm2ddl schema update org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:105)
[2019-01-10 13:58:35,989/CST][main][INFO]Initialized JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:379)
[2019-01-10 13:58:36,059/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoResource': Unsatisfied dependency expressed through field 'geoService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoServiceImpl': Unsatisfied dependency expressed through field 'cityDaoImpl'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'pw.cdmi.aws.geo.repositories.CityRepository' available: expected single matching bean but found 2: mongoCityRepository,jpaCityRepository org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2019-01-10 13:58:36,060/CST][main][INFO]Closing JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:548)
[2019-01-10 13:58:36,094/CST][main][INFO]

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled. org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer.logAutoConfigurationReport(AutoConfigurationReportLoggingInitializer.java:101)
[2019-01-10 13:58:36,111/CST][main][ERROR]

***************************
APPLICATION FAILED TO START
***************************

Description:

Field cityDaoImpl in pw.cdmi.aws.geo.service.impl.GeoServiceImpl required a single bean, but 2 were found:
	- mongoCityRepository: defined in null
	- jpaCityRepository: defined in null


Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed
 org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:42)
[2019-01-10 14:00:44,029/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 14:00:45,206/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83: startup date [Thu Jan 10 14:00:45 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 14:00:45,600/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 14:00:45,827/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 14:00:45,925/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.3.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 14:00:46,868/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:637)
[2019-01-10 14:00:46,913/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@61ce23ac: startup date [Thu Jan 10 14:00:46 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 14:00:47,965/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 14:00:48,412/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 14:00:48,739/CST][main][WARN]Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses(ConfigurationClassPostProcessor.java:373)
[2019-01-10 14:00:49,041/CST][main][INFO]BeanFactory id=f5226881-01e2-3076-b39e-e8fc24dce615 org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263)
[2019-01-10 14:00:49,112/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 14:00:49,434/CST][main][INFO]Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8ca99567] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 14:00:49,507/CST][main][INFO]Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 14:00:50,565/CST][main][INFO]Building JPA container EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:349)
[2019-01-10 14:00:50,587/CST][main][INFO]HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
[2019-01-10 14:00:50,728/CST][main][INFO]HHH000412: Hibernate Core {5.0.12.Final} org.hibernate.Version.logVersion(Version.java:37)
[2019-01-10 14:00:50,731/CST][main][INFO]HHH000206: hibernate.properties not found org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
[2019-01-10 14:00:50,734/CST][main][INFO]HHH000021: Bytecode provider name : javassist org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
[2019-01-10 14:00:50,823/CST][main][INFO]HCANN000001: Hibernate Commons Annotations {5.0.1.Final} org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
[2019-01-10 14:00:51,049/CST][main][INFO]HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
[2019-01-10 14:00:52,089/CST][main][INFO]HHH000228: Running hbm2ddl schema update org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:105)
[2019-01-10 14:00:52,372/CST][main][INFO]Initialized JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:379)
[2019-01-10 14:00:52,429/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoResource': Unsatisfied dependency expressed through field 'geoService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoServiceImpl': Unsatisfied dependency expressed through field 'cityDaoImpl'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'pw.cdmi.aws.geo.repositories.CityRepository' available: expected single matching bean but found 2: jpaCityRepository,mongoCityRepository org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2019-01-10 14:00:52,430/CST][main][INFO]Closing JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:548)
[2019-01-10 14:00:52,448/CST][main][INFO]

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled. org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer.logAutoConfigurationReport(AutoConfigurationReportLoggingInitializer.java:101)
[2019-01-10 14:00:52,458/CST][main][ERROR]

***************************
APPLICATION FAILED TO START
***************************

Description:

Field cityDaoImpl in pw.cdmi.aws.geo.service.impl.GeoServiceImpl required a single bean, but 2 were found:
	- jpaCityRepository: defined in null
	- mongoCityRepository: defined in null


Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed
 org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:42)
[2019-01-10 14:03:50,585/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 14:03:51,798/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83: startup date [Thu Jan 10 14:03:51 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 14:03:52,156/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 14:03:52,343/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 14:03:52,418/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.3.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 14:03:53,242/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:637)
[2019-01-10 14:03:53,266/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3b0c9195: startup date [Thu Jan 10 14:03:53 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6dc17b83 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 14:03:54,415/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 14:03:54,717/CST][main][INFO]Multiple Spring Data modules found, entering strict repository configuration mode! org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:170)
[2019-01-10 14:03:54,751/CST][main][INFO]Overriding bean definition for bean 'mongoTownRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 14:03:54,755/CST][main][INFO]Overriding bean definition for bean 'mongoCityRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 14:03:54,759/CST][main][INFO]Overriding bean definition for bean 'jpaTownRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 14:03:54,763/CST][main][INFO]Overriding bean definition for bean 'mongoProvinceRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 14:03:54,768/CST][main][INFO]Overriding bean definition for bean 'jpaProvinceRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 14:03:54,773/CST][main][INFO]Overriding bean definition for bean 'mongoDistrictRepositories' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 14:03:54,777/CST][main][INFO]Overriding bean definition for bean 'jpaDistrictRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 14:03:54,781/CST][main][INFO]Overriding bean definition for bean 'jpaCityRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 14:03:54,785/CST][main][INFO]Overriding bean definition for bean 'jpaCountryRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 14:03:54,789/CST][main][INFO]Overriding bean definition for bean 'mongoCountryRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:826)
[2019-01-10 14:03:54,875/CST][main][WARN]Cannot enhance @Configuration bean definition 'refreshScope' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses(ConfigurationClassPostProcessor.java:373)
[2019-01-10 14:03:55,103/CST][main][INFO]BeanFactory id=30a98c86-9280-3f29-ac42-4d98441c09d8 org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263)
[2019-01-10 14:03:55,154/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 14:03:55,400/CST][main][INFO]Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8ca99567] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 14:03:55,440/CST][main][INFO]Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8c39864] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 14:03:56,240/CST][main][INFO]Building JPA container EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:349)
[2019-01-10 14:03:56,266/CST][main][INFO]HHH000204: Processing PersistenceUnitInfo [
	name: default
	...] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
[2019-01-10 14:03:56,399/CST][main][INFO]HHH000412: Hibernate Core {5.0.12.Final} org.hibernate.Version.logVersion(Version.java:37)
[2019-01-10 14:03:56,403/CST][main][INFO]HHH000206: hibernate.properties not found org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
[2019-01-10 14:03:56,406/CST][main][INFO]HHH000021: Bytecode provider name : javassist org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
[2019-01-10 14:03:56,528/CST][main][INFO]HCANN000001: Hibernate Commons Annotations {5.0.1.Final} org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
[2019-01-10 14:03:56,814/CST][main][INFO]HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
[2019-01-10 14:03:57,697/CST][main][INFO]HHH000228: Running hbm2ddl schema update org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:105)
[2019-01-10 14:03:57,958/CST][main][INFO]Initialized JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:379)
[2019-01-10 14:03:58,015/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoResource': Unsatisfied dependency expressed through field 'geoService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoServiceImpl': Unsatisfied dependency expressed through field 'cityDaoImpl'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'pw.cdmi.aws.geo.repositories.CityRepository' available: expected single matching bean but found 2: jpaCityRepository,mongoCityRepository org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2019-01-10 14:03:58,016/CST][main][INFO]Closing JPA EntityManagerFactory for persistence unit 'default' org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:548)
[2019-01-10 14:03:58,030/CST][main][INFO]

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled. org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer.logAutoConfigurationReport(AutoConfigurationReportLoggingInitializer.java:101)
[2019-01-10 14:03:58,039/CST][main][ERROR]

***************************
APPLICATION FAILED TO START
***************************

Description:

Field cityDaoImpl in pw.cdmi.aws.geo.service.impl.GeoServiceImpl required a single bean, but 2 were found:
	- jpaCityRepository: defined in null
	- mongoCityRepository: defined in null


Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed
 org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:42)
[2019-01-10 14:05:27,300/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 14:05:27,687/CST][main][ERROR]Application startup failed org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:840)
java.lang.IllegalArgumentException: Cannot find class [org.springframework.boot.autoconfigure.PropertyPlaceholderAutoConfiguration]
	at org.springframework.util.ClassUtils.resolveClassName(ClassUtils.java:287)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:132)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:89)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:62)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:166)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:138)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:121)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:72)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1187)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1176)
	at pw.cdmi.aws.geo.Application.main(Application.java:37)
Caused by: java.lang.ClassNotFoundException: org.springframework.boot.autoconfigure.PropertyPlaceholderAutoConfiguration
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:250)
	at org.springframework.util.ClassUtils.resolveClassName(ClassUtils.java:284)
	... 13 more
[2019-01-10 14:05:55,123/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 14:05:55,461/CST][main][ERROR]Application startup failed org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:840)
java.lang.IllegalArgumentException: Cannot find class [org.springframework.boot.autoconfigure.PropertyPlaceholderAutoConfiguration]
	at org.springframework.util.ClassUtils.resolveClassName(ClassUtils.java:287)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:132)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:89)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:62)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:166)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:138)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:121)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:72)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1187)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1176)
	at pw.cdmi.aws.geo.Application.main(Application.java:33)
Caused by: java.lang.ClassNotFoundException: org.springframework.boot.autoconfigure.PropertyPlaceholderAutoConfiguration
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:250)
	at org.springframework.util.ClassUtils.resolveClassName(ClassUtils.java:284)
	... 13 more
[2019-01-10 14:08:46,645/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 14:08:46,952/CST][main][ERROR]Application startup failed org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:840)
java.lang.IllegalArgumentException: Cannot find class [org.springframework.boot.autoconfigure.PropertyPlaceholderAutoConfiguration]
	at org.springframework.util.ClassUtils.resolveClassName(ClassUtils.java:287)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:132)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:89)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:62)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:166)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:138)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:121)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:72)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1187)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1176)
	at pw.cdmi.aws.geo.Application.main(Application.java:33)
Caused by: java.lang.ClassNotFoundException: org.springframework.boot.autoconfigure.PropertyPlaceholderAutoConfiguration
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:250)
	at org.springframework.util.ClassUtils.resolveClassName(ClassUtils.java:284)
	... 13 more
[2019-01-10 14:09:17,582/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 14:09:17,908/CST][main][ERROR]Application startup failed org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:840)
java.lang.IllegalArgumentException: Cannot find class [org.springframework.boot.autoconfigure.PropertyPlaceholderAutoConfiguration]
	at org.springframework.util.ClassUtils.resolveClassName(ClassUtils.java:287)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:132)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:89)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:62)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:166)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:138)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:121)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:72)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1187)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1176)
	at pw.cdmi.aws.geo.Application.main(Application.java:33)
Caused by: java.lang.ClassNotFoundException: org.springframework.boot.autoconfigure.PropertyPlaceholderAutoConfiguration
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:250)
	at org.springframework.util.ClassUtils.resolveClassName(ClassUtils.java:284)
	... 13 more
[2019-01-10 14:23:20,578/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 14:23:20,899/CST][main][ERROR]Application startup failed org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:840)
java.lang.IllegalArgumentException: Cannot find class [org.springframework.boot.autoconfigure.PropertyPlaceholderAutoConfiguration]
	at org.springframework.util.ClassUtils.resolveClassName(ClassUtils.java:287)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:132)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:89)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:62)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:166)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:138)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:121)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:72)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1187)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1176)
	at pw.cdmi.aws.geo.Application.main(Application.java:33)
Caused by: java.lang.ClassNotFoundException: org.springframework.boot.autoconfigure.PropertyPlaceholderAutoConfiguration
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:250)
	at org.springframework.util.ClassUtils.resolveClassName(ClassUtils.java:284)
	... 13 more
[2019-01-10 14:25:45,011/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 14:25:45,330/CST][main][ERROR]Application startup failed org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:840)
java.lang.IllegalArgumentException: Cannot find class [org.springframework.boot.autoconfigure.PropertyPlaceholderAutoConfiguration]
	at org.springframework.util.ClassUtils.resolveClassName(ClassUtils.java:287)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:132)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:89)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:62)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:166)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:138)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:121)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:72)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1187)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1176)
	at pw.cdmi.aws.geo.Application.main(Application.java:33)
Caused by: java.lang.ClassNotFoundException: org.springframework.boot.autoconfigure.PropertyPlaceholderAutoConfiguration
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:250)
	at org.springframework.util.ClassUtils.resolveClassName(ClassUtils.java:284)
	... 13 more
[2019-01-10 14:26:11,870/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 14:26:12,255/CST][main][ERROR]Application startup failed org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:840)
java.lang.IllegalArgumentException: Cannot find class [org.springframework.boot.autoconfigure.PropertyPlaceholderAutoConfiguration]
	at org.springframework.util.ClassUtils.resolveClassName(ClassUtils.java:287)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:132)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:89)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:62)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:166)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:138)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:121)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:72)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1187)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1176)
	at pw.cdmi.aws.geo.Application.main(Application.java:28)
Caused by: java.lang.ClassNotFoundException: org.springframework.boot.autoconfigure.PropertyPlaceholderAutoConfiguration
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:250)
	at org.springframework.util.ClassUtils.resolveClassName(ClassUtils.java:284)
	... 13 more
[2019-01-10 14:30:42,044/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 14:30:43,563/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@41fecb8b: startup date [Thu Jan 10 14:30:43 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 14:30:43,619/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.2.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 14:30:43,946/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 14:30:44,008/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$282eda35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 14:30:44,856/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:662)
[2019-01-10 14:30:44,861/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4d18aa28: startup date [Thu Jan 10 14:30:44 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@41fecb8b org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 14:30:44,878/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:30:45,536/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-bizkeeper/1.0.0-m1/handler-bizkeeper-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:30:45,565/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-metrics/1.0.0-m1/foundation-metrics-1.0.0-m1.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:30:45,605/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-loadbalance/1.0.0-m1/handler-loadbalance-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:30:45,623/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-vertx/1.0.0-m1/foundation-vertx-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:30:45,651/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/transport-rest-client/1.0.0-m1/transport-rest-client-1.0.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:30:45,668/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-config/1.0.0-m1/foundation-config-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:30:45,684/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:30:46,018/CST][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2019-01-10 14:30:46,020/CST][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2019-01-10 14:30:46,030/CST][main][INFO]create dynamic config: org.apache.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:169)
[2019-01-10 14:30:46,048/CST][main][INFO]create local config: org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:87)
[2019-01-10 14:30:46,049/CST][main][INFO] file:/D:/2.JSpace/cdmi-dev-all/cdmi-geo-server/target/classes/microservice.yaml. org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:89)
[2019-01-10 14:30:46,080/CST][main][INFO]Can not get the SPI service, the interface type is: interface org.apache.servicecomb.config.spi.ConfigCenterConfigurationSource org.apache.servicecomb.foundation.common.utils.SPIServiceUtils.getTargetService(SPIServiceUtils.java:54)
[2019-01-10 14:30:46,081/CST][main][INFO]config center SPI service can not find, skip to load configuration from config center org.apache.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:154)
[2019-01-10 14:30:46,333/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 14:30:46,698/CST][main][INFO]Found swagger generator context: org.apache.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext org.apache.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2019-01-10 14:30:46,699/CST][main][INFO]Found swagger generator context: org.apache.servicecomb.swagger.generator.jaxrs.JaxrsSwaggerGeneratorContext org.apache.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2019-01-10 14:30:46,699/CST][main][INFO]Found swagger generator context: org.apache.servicecomb.swagger.generator.pojo.PojoSwaggerGeneratorContext org.apache.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2019-01-10 14:30:46,725/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.springmvc.response.SpringmvcProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:30:46,725/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.producer.CseResponseProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:30:46,726/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.producer.CompletableFutureProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:30:46,729/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.jaxrs.response.JaxrsProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:30:46,730/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.producer.DefaultProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:30:46,736/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.springmvc.response.SpringmvcConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:30:46,739/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.consumer.CseResponseConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:30:46,740/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.consumer.CompletableFutureConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:30:46,740/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.jaxrs.response.JaxrsConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:30:46,741/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.consumer.DefaultConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:30:47,848/CST][main][INFO]load microservice config, name=cdmi-geo, paths=[file:/D:/2.JSpace/cdmi-dev-all/cdmi-geo-server/target/classes/microservice.yaml] org.apache.servicecomb.serviceregistry.definition.MicroserviceDefinition.logConfigPath(MicroserviceDefinition.java:142)
[2019-01-10 14:30:47,922/CST][main][INFO]It is running in the normal mode, a separated service registry is required org.apache.servicecomb.serviceregistry.registry.ServiceRegistryFactory.create(ServiceRegistryFactory.java:81)
[2019-01-10 14:30:48,172/CST][main][INFO]add network interface name:eth0,host address:192.168.99.1 org.apache.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:114)
[2019-01-10 14:30:48,185/CST][main][INFO]add network interface name:wlan0,host address:192.168.31.121 org.apache.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:114)
[2019-01-10 14:30:48,256/CST][main][INFO]add network interface name:eth7,host address:192.168.56.1 org.apache.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:114)
[2019-01-10 14:30:48,369/CST][main][INFO]add host name from localhost:LAPTOP-K999KJQI,host address:192.168.99.1 org.apache.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:72)
[2019-01-10 14:30:48,520/CST][main][INFO]executor group 2, thread per group 4. org.apache.servicecomb.core.executor.FixedThreadExecutor.<init>(FixedThreadExecutor.java:54)
[2019-01-10 14:30:48,748/CST][main][WARN]address /0.0.0.0:8080, auto select a host address to publish 192.168.99.1:8080, maybe not the correct one org.apache.servicecomb.serviceregistry.RegistryUtils.genPublishIpPort(RegistryUtils.java:181)
[2019-01-10 14:30:48,752/CST][main][INFO]choose org.apache.servicecomb.transport.rest.vertx.VertxRestTransport for rest. org.apache.servicecomb.core.transport.TransportManager.chooseOneTransport(TransportManager.java:84)
[2019-01-10 14:30:48,752/CST][main][INFO]choose org.apache.servicecomb.transport.highway.HighwayTransport for highway. org.apache.servicecomb.core.transport.TransportManager.chooseOneTransport(TransportManager.java:84)
[2019-01-10 14:30:49,378/CST][transport-vert.x-eventloop-thread-2][INFO]Found HttpServerFilter: org.apache.servicecomb.common.rest.filter.tracing.TracingFilter. org.apache.servicecomb.transport.rest.vertx.AbstractVertxHttpDispatcher.<init>(AbstractVertxHttpDispatcher.java:40)
[2019-01-10 14:30:49,381/CST][transport-vert.x-eventloop-thread-2][INFO]init vertx http dispatcher org.apache.servicecomb.transport.rest.vertx.VertxRestDispatcher org.apache.servicecomb.transport.rest.vertx.RestServerVerticle.initDispatcher(RestServerVerticle.java:95)
[2019-01-10 14:30:49,386/CST][transport-vert.x-eventloop-thread-2][INFO]set uploads directory to null. org.apache.servicecomb.transport.rest.vertx.AbstractVertxHttpDispatcher.createBodyHandler(AbstractVertxHttpDispatcher.java:53)
[2019-01-10 14:30:49,807/CST][transport-vert.x-eventloop-thread-2][INFO]rest listen success. address=0.0.0.0:8080 org.apache.servicecomb.transport.rest.vertx.RestServerVerticle.lambda$startListen$0(RestServerVerticle.java:103)
[2019-01-10 14:30:49,808/CST][main][INFO]endpoint to publish: rest://192.168.99.1:8080 org.apache.servicecomb.core.transport.TransportManager.init(TransportManager.java:58)
[2019-01-10 14:30:49,822/CST][transport-vert.x-eventloop-thread-6][WARN]highway listen address is not configured, will not listen. org.apache.servicecomb.transport.highway.HighwayServerVerticle.startListen(HighwayServerVerticle.java:59)
[2019-01-10 14:30:49,824/CST][main][INFO]running microservice register task. org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2019-01-10 14:30:50,924/CST][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=cdmi-geo-server&type=microservice&serviceName=cdmi-geo&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:93)
[2019-01-10 14:30:50,924/CST][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/existence] failed, retry. org.apache.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:85)
[2019-01-10 14:30:50,925/CST][registry-vert.x-eventloop-thread-0][INFO]Change service center address from 127.0.0.1:30100 to 127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.IpPortManager.getNextAvailableAddress(IpPortManager.java:84)
[2019-01-10 14:30:51,931/CST][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=cdmi-geo-server&type=microservice&serviceName=cdmi-geo&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:93)
[2019-01-10 14:30:53,047/CST][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:93)
[2019-01-10 14:30:53,048/CST][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices] failed, retry. org.apache.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:85)
[2019-01-10 14:30:53,049/CST][registry-vert.x-eventloop-thread-0][INFO]Change service center address from 127.0.0.1:30100 to 127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.IpPortManager.getNextAvailableAddress(IpPortManager.java:84)
[2019-01-10 14:30:54,058/CST][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:93)
[2019-01-10 14:30:54,059/CST][main][ERROR]Registry microservice failed. appId=cdmi-geo-server, name=cdmi-geo, version=0.0.1 org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:77)
[2019-01-10 14:30:54,063/CST][main][INFO]read MicroserviceRegisterTask status is READY org.apache.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2019-01-10 14:30:54,067/CST][main][INFO]Started Application in 11.738 seconds (JVM running for 13.341) org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:57)
[2019-01-10 14:31:24,066/CST][Service Center Task][WARN]sc task interval changed from -1 to 30 org.apache.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.beginCycle(ServiceCenterTaskMonitor.java:39)
[2019-01-10 14:31:24,066/CST][Service Center Task][INFO]running microservice register task. org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2019-01-10 14:31:25,069/CST][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=cdmi-geo-server&type=microservice&serviceName=cdmi-geo&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:93)
[2019-01-10 14:31:25,069/CST][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/existence] failed, retry. org.apache.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:85)
[2019-01-10 14:31:25,070/CST][registry-vert.x-eventloop-thread-0][INFO]Change service center address from 127.0.0.1:30100 to 127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.IpPortManager.getNextAvailableAddress(IpPortManager.java:84)
[2019-01-10 14:31:26,072/CST][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=cdmi-geo-server&type=microservice&serviceName=cdmi-geo&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:93)
[2019-01-10 14:31:27,075/CST][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:93)
[2019-01-10 14:31:27,076/CST][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices] failed, retry. org.apache.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:85)
[2019-01-10 14:31:27,076/CST][registry-vert.x-eventloop-thread-0][INFO]Change service center address from 127.0.0.1:30100 to 127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.IpPortManager.getNextAvailableAddress(IpPortManager.java:84)
[2019-01-10 14:31:28,079/CST][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:93)
[2019-01-10 14:31:28,080/CST][Service Center Task][ERROR]Registry microservice failed. appId=cdmi-geo-server, name=cdmi-geo, version=0.0.1 org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:77)
[2019-01-10 14:31:28,081/CST][Service Center Task][INFO]read MicroserviceRegisterTask status is READY org.apache.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2019-01-10 14:31:28,081/CST][Service Center Task][WARN]sc task taken more than 4015ms to execute org.apache.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.endCycle(ServiceCenterTaskMonitor.java:51)
[2019-01-10 14:31:54,065/CST][Service Center Task][INFO]running microservice register task. org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2019-01-10 14:31:55,068/CST][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=cdmi-geo-server&type=microservice&serviceName=cdmi-geo&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:93)
[2019-01-10 14:31:55,069/CST][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/existence] failed, retry. org.apache.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:85)
[2019-01-10 14:31:55,069/CST][registry-vert.x-eventloop-thread-0][INFO]Change service center address from 127.0.0.1:30100 to 127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.IpPortManager.getNextAvailableAddress(IpPortManager.java:84)
[2019-01-10 14:31:56,071/CST][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=cdmi-geo-server&type=microservice&serviceName=cdmi-geo&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:93)
[2019-01-10 14:31:57,075/CST][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:93)
[2019-01-10 14:31:57,076/CST][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices] failed, retry. org.apache.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:85)
[2019-01-10 14:31:57,077/CST][registry-vert.x-eventloop-thread-0][INFO]Change service center address from 127.0.0.1:30100 to 127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.IpPortManager.getNextAvailableAddress(IpPortManager.java:84)
[2019-01-10 14:31:58,081/CST][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:93)
[2019-01-10 14:31:58,081/CST][Service Center Task][ERROR]Registry microservice failed. appId=cdmi-geo-server, name=cdmi-geo, version=0.0.1 org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:77)
[2019-01-10 14:31:58,082/CST][Service Center Task][INFO]read MicroserviceRegisterTask status is READY org.apache.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2019-01-10 14:31:58,083/CST][Service Center Task][WARN]sc task taken more than 4018ms to execute org.apache.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.endCycle(ServiceCenterTaskMonitor.java:51)
[2019-01-10 14:32:24,067/CST][Service Center Task][INFO]running microservice register task. org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2019-01-10 14:32:25,080/CST][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=cdmi-geo-server&type=microservice&serviceName=cdmi-geo&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:93)
[2019-01-10 14:32:25,080/CST][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/existence] failed, retry. org.apache.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:85)
[2019-01-10 14:32:25,081/CST][registry-vert.x-eventloop-thread-0][INFO]Change service center address from 127.0.0.1:30100 to 127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.IpPortManager.getNextAvailableAddress(IpPortManager.java:84)
[2019-01-10 14:32:26,084/CST][registry-vert.x-eventloop-thread-0][ERROR]GET /v4/default/registry/existence?appId=cdmi-geo-server&type=microservice&serviceName=cdmi-geo&version=0.0.1 fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:93)
[2019-01-10 14:32:27,086/CST][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:93)
[2019-01-10 14:32:27,087/CST][registry-vert.x-eventloop-thread-0][WARN]invoke service [/v4/default/registry/microservices] failed, retry. org.apache.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.retry(ServiceRegistryClientImpl.java:85)
[2019-01-10 14:32:27,087/CST][registry-vert.x-eventloop-thread-0][INFO]Change service center address from 127.0.0.1:30100 to 127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.IpPortManager.getNextAvailableAddress(IpPortManager.java:84)
[2019-01-10 14:32:28,093/CST][registry-vert.x-eventloop-thread-0][ERROR]POST /v4/default/registry/microservices fail, endpoint is 127.0.0.1:30100, message: Connection refused: no further information: /127.0.0.1:30100 org.apache.servicecomb.serviceregistry.client.http.RestUtils.lambda$null$1(RestUtils.java:93)
[2019-01-10 14:32:28,094/CST][Service Center Task][ERROR]Registry microservice failed. appId=cdmi-geo-server, name=cdmi-geo, version=0.0.1 org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:77)
[2019-01-10 14:32:28,095/CST][Service Center Task][INFO]read MicroserviceRegisterTask status is READY org.apache.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2019-01-10 14:32:28,095/CST][Service Center Task][WARN]sc task taken more than 4028ms to execute org.apache.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.endCycle(ServiceCenterTaskMonitor.java:51)
[2019-01-10 14:33:03,240/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 14:33:04,545/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@41fecb8b: startup date [Thu Jan 10 14:33:04 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 14:33:04,568/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.2.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 14:33:04,867/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 14:33:04,920/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$282eda35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 14:33:05,659/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:662)
[2019-01-10 14:33:05,664/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4d18aa28: startup date [Thu Jan 10 14:33:05 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@41fecb8b org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 14:33:05,679/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:33:06,272/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-bizkeeper/1.0.0-m1/handler-bizkeeper-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:33:06,295/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-metrics/1.0.0-m1/foundation-metrics-1.0.0-m1.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:33:06,312/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-loadbalance/1.0.0-m1/handler-loadbalance-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:33:06,328/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-vertx/1.0.0-m1/foundation-vertx-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:33:06,344/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/transport-rest-client/1.0.0-m1/transport-rest-client-1.0.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:33:06,359/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-config/1.0.0-m1/foundation-config-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:33:06,379/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:33:06,673/CST][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2019-01-10 14:33:06,674/CST][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2019-01-10 14:33:06,681/CST][main][INFO]create dynamic config: org.apache.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:169)
[2019-01-10 14:33:06,690/CST][main][INFO]create local config: org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:87)
[2019-01-10 14:33:06,690/CST][main][INFO] file:/D:/2.JSpace/cdmi-dev-all/cdmi-geo-server/target/classes/microservice.yaml. org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:89)
[2019-01-10 14:33:06,706/CST][main][INFO]Can not get the SPI service, the interface type is: interface org.apache.servicecomb.config.spi.ConfigCenterConfigurationSource org.apache.servicecomb.foundation.common.utils.SPIServiceUtils.getTargetService(SPIServiceUtils.java:54)
[2019-01-10 14:33:06,706/CST][main][INFO]config center SPI service can not find, skip to load configuration from config center org.apache.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:154)
[2019-01-10 14:33:06,972/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 14:33:07,292/CST][main][INFO]Found swagger generator context: org.apache.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext org.apache.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2019-01-10 14:33:07,293/CST][main][INFO]Found swagger generator context: org.apache.servicecomb.swagger.generator.jaxrs.JaxrsSwaggerGeneratorContext org.apache.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2019-01-10 14:33:07,294/CST][main][INFO]Found swagger generator context: org.apache.servicecomb.swagger.generator.pojo.PojoSwaggerGeneratorContext org.apache.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2019-01-10 14:33:07,327/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.springmvc.response.SpringmvcProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:33:07,327/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.producer.CseResponseProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:33:07,328/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.producer.CompletableFutureProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:33:07,329/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.jaxrs.response.JaxrsProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:33:07,329/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.producer.DefaultProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:33:07,337/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.springmvc.response.SpringmvcConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:33:07,343/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.consumer.CseResponseConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:33:07,344/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.consumer.CompletableFutureConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:33:07,345/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.jaxrs.response.JaxrsConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:33:07,346/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.consumer.DefaultConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:33:08,183/CST][main][INFO]load microservice config, name=cdmi-geo, paths=[file:/D:/2.JSpace/cdmi-dev-all/cdmi-geo-server/target/classes/microservice.yaml] org.apache.servicecomb.serviceregistry.definition.MicroserviceDefinition.logConfigPath(MicroserviceDefinition.java:142)
[2019-01-10 14:33:08,254/CST][main][INFO]It is running in the normal mode, a separated service registry is required org.apache.servicecomb.serviceregistry.registry.ServiceRegistryFactory.create(ServiceRegistryFactory.java:81)
[2019-01-10 14:33:08,495/CST][main][INFO]add network interface name:eth0,host address:192.168.99.1 org.apache.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:114)
[2019-01-10 14:33:08,505/CST][main][INFO]add network interface name:wlan0,host address:192.168.31.121 org.apache.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:114)
[2019-01-10 14:33:08,556/CST][main][INFO]add network interface name:eth7,host address:192.168.56.1 org.apache.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:114)
[2019-01-10 14:33:08,666/CST][main][INFO]add host name from localhost:LAPTOP-K999KJQI,host address:192.168.99.1 org.apache.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:72)
[2019-01-10 14:33:08,801/CST][main][INFO]executor group 2, thread per group 4. org.apache.servicecomb.core.executor.FixedThreadExecutor.<init>(FixedThreadExecutor.java:54)
[2019-01-10 14:33:09,020/CST][main][WARN]address /0.0.0.0:8080, auto select a host address to publish 192.168.99.1:8080, maybe not the correct one org.apache.servicecomb.serviceregistry.RegistryUtils.genPublishIpPort(RegistryUtils.java:181)
[2019-01-10 14:33:09,024/CST][main][INFO]choose org.apache.servicecomb.transport.rest.vertx.VertxRestTransport for rest. org.apache.servicecomb.core.transport.TransportManager.chooseOneTransport(TransportManager.java:84)
[2019-01-10 14:33:09,024/CST][main][INFO]choose org.apache.servicecomb.transport.highway.HighwayTransport for highway. org.apache.servicecomb.core.transport.TransportManager.chooseOneTransport(TransportManager.java:84)
[2019-01-10 14:33:09,548/CST][transport-vert.x-eventloop-thread-2][INFO]Found HttpServerFilter: org.apache.servicecomb.common.rest.filter.tracing.TracingFilter. org.apache.servicecomb.transport.rest.vertx.AbstractVertxHttpDispatcher.<init>(AbstractVertxHttpDispatcher.java:40)
[2019-01-10 14:33:09,550/CST][transport-vert.x-eventloop-thread-2][INFO]init vertx http dispatcher org.apache.servicecomb.transport.rest.vertx.VertxRestDispatcher org.apache.servicecomb.transport.rest.vertx.RestServerVerticle.initDispatcher(RestServerVerticle.java:95)
[2019-01-10 14:33:09,553/CST][transport-vert.x-eventloop-thread-2][INFO]set uploads directory to null. org.apache.servicecomb.transport.rest.vertx.AbstractVertxHttpDispatcher.createBodyHandler(AbstractVertxHttpDispatcher.java:53)
[2019-01-10 14:33:09,930/CST][transport-vert.x-eventloop-thread-2][INFO]rest listen success. address=0.0.0.0:8080 org.apache.servicecomb.transport.rest.vertx.RestServerVerticle.lambda$startListen$0(RestServerVerticle.java:103)
[2019-01-10 14:33:09,930/CST][main][INFO]endpoint to publish: rest://192.168.99.1:8080 org.apache.servicecomb.core.transport.TransportManager.init(TransportManager.java:58)
[2019-01-10 14:33:09,945/CST][transport-vert.x-eventloop-thread-6][WARN]highway listen address is not configured, will not listen. org.apache.servicecomb.transport.highway.HighwayServerVerticle.startListen(HighwayServerVerticle.java:59)
[2019-01-10 14:33:09,947/CST][main][INFO]running microservice register task. org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2019-01-10 14:33:10,121/CST][registry-vert.x-eventloop-thread-0][WARN]get response for org.apache.servicecomb.serviceregistry.api.response.GetExistenceResponse failed, 400:Bad Request, {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"/cdmi-geo-server/cdmi-geo/0.0.1 does not exist."}
 org.apache.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:117)
[2019-01-10 14:33:10,199/CST][main][INFO]Registry Microservice successfully. id=cba9ca35b096e6b143a6994610a77332cbd4dcf0 appId=cdmi-geo-server, name=cdmi-geo, version=0.0.1, schemaIds=[] org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:89)
[2019-01-10 14:33:10,202/CST][main][INFO]read MicroserviceRegisterTask status is FINISHED org.apache.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2019-01-10 14:33:10,202/CST][main][INFO]running microservice instance register task. org.apache.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:59)
[2019-01-10 14:33:10,211/CST][main][INFO]Register microservice instance success. microserviceId=cba9ca35b096e6b143a6994610a77332cbd4dcf0 instanceId=9a3e961914a111e9a9d40242ac110002 endpoints=[rest://192.168.99.1:8080] lease 120s org.apache.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:77)
[2019-01-10 14:33:10,212/CST][main][INFO]receive MicroserviceInstanceRegisterTask event, check instance Id... org.apache.servicecomb.core.CseApplicationListener$1.afterRegistryInstance(CseApplicationListener.java:170)
[2019-01-10 14:33:10,212/CST][main][INFO]instance registry succeeds for the first time, will send AFTER_REGISTRY event. org.apache.servicecomb.core.CseApplicationListener$1.afterRegistryInstance(CseApplicationListener.java:172)
[2019-01-10 14:33:10,215/CST][main][INFO]read MicroserviceInstanceRegisterTask status is FINISHED org.apache.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2019-01-10 14:33:10,255/CST][main][INFO]Started Application in 6.789 seconds (JVM running for 7.85) org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:57)
[2019-01-10 14:33:10,276/CST][registry-vert.x-eventloop-thread-2][INFO]watching microservice cba9ca35b096e6b143a6994610a77332cbd4dcf0 successfully, the chosen service center address is 192.168.99.100:30100 org.apache.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$8(ServiceRegistryClientImpl.java:533)
[2019-01-10 14:33:40,236/CST][Service Center Task][WARN]sc task interval changed from -1 to 30 org.apache.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.beginCycle(ServiceCenterTaskMonitor.java:39)
[2019-01-10 14:33:59,327/CST][transport-vert.x-eventloop-thread-2][ERROR]No schema defined for cdmi-geo-server:cdmi-geo. org.apache.servicecomb.common.rest.AbstractRestInvocation.findRestOperation(AbstractRestInvocation.java:77)
[2019-01-10 14:33:59,413/CST][transport-vert.x-eventloop-thread-2][ERROR]No schema defined for cdmi-geo-server:cdmi-geo. org.apache.servicecomb.common.rest.AbstractRestInvocation.findRestOperation(AbstractRestInvocation.java:77)
[2019-01-10 14:34:39,436/CST][transport-vert.x-eventloop-thread-2][ERROR]No schema defined for cdmi-geo-server:cdmi-geo. org.apache.servicecomb.common.rest.AbstractRestInvocation.findRestOperation(AbstractRestInvocation.java:77)
[2019-01-10 14:34:39,525/CST][transport-vert.x-eventloop-thread-2][ERROR]No schema defined for cdmi-geo-server:cdmi-geo. org.apache.servicecomb.common.rest.AbstractRestInvocation.findRestOperation(AbstractRestInvocation.java:77)
[2019-01-10 14:36:34,284/CST][transport-vert.x-eventloop-thread-2][ERROR]No schema defined for cdmi-geo-server:cdmi-geo. org.apache.servicecomb.common.rest.AbstractRestInvocation.findRestOperation(AbstractRestInvocation.java:77)
[2019-01-10 14:39:15,034/CST][transport-vert.x-eventloop-thread-2][ERROR]No schema defined for cdmi-geo-server:cdmi-geo. org.apache.servicecomb.common.rest.AbstractRestInvocation.findRestOperation(AbstractRestInvocation.java:77)
[2019-01-10 14:39:22,342/CST][transport-vert.x-eventloop-thread-2][ERROR]No schema defined for cdmi-geo-server:cdmi-geo. org.apache.servicecomb.common.rest.AbstractRestInvocation.findRestOperation(AbstractRestInvocation.java:77)
[2019-01-10 14:42:43,519/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 14:42:44,871/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@41fecb8b: startup date [Thu Jan 10 14:42:44 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 14:42:44,921/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.2.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 14:42:45,223/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 14:42:45,277/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$282eda35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 14:42:46,047/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:662)
[2019-01-10 14:42:46,052/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4d18aa28: startup date [Thu Jan 10 14:42:46 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@41fecb8b org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 14:42:46,069/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:42:46,677/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-bizkeeper/1.0.0-m1/handler-bizkeeper-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:42:46,705/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-metrics/1.0.0-m1/foundation-metrics-1.0.0-m1.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:42:46,725/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-loadbalance/1.0.0-m1/handler-loadbalance-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:42:46,745/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-vertx/1.0.0-m1/foundation-vertx-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:42:46,771/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/transport-rest-client/1.0.0-m1/transport-rest-client-1.0.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:42:46,795/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-config/1.0.0-m1/foundation-config-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:42:46,813/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:42:47,131/CST][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2019-01-10 14:42:47,133/CST][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2019-01-10 14:42:47,138/CST][main][INFO]create dynamic config: org.apache.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:169)
[2019-01-10 14:42:47,147/CST][main][INFO]create local config: org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:87)
[2019-01-10 14:42:47,148/CST][main][INFO] file:/D:/2.JSpace/cdmi-dev-all/cdmi-geo-server/target/classes/microservice.yaml. org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:89)
[2019-01-10 14:42:47,166/CST][main][INFO]Can not get the SPI service, the interface type is: interface org.apache.servicecomb.config.spi.ConfigCenterConfigurationSource org.apache.servicecomb.foundation.common.utils.SPIServiceUtils.getTargetService(SPIServiceUtils.java:54)
[2019-01-10 14:42:47,166/CST][main][INFO]config center SPI service can not find, skip to load configuration from config center org.apache.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:154)
[2019-01-10 14:42:47,398/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 14:42:47,590/CST][main][INFO]Found swagger generator context: org.apache.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext org.apache.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2019-01-10 14:42:47,591/CST][main][INFO]Found swagger generator context: org.apache.servicecomb.swagger.generator.jaxrs.JaxrsSwaggerGeneratorContext org.apache.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2019-01-10 14:42:47,592/CST][main][INFO]Found swagger generator context: org.apache.servicecomb.swagger.generator.pojo.PojoSwaggerGeneratorContext org.apache.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2019-01-10 14:42:47,630/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.springmvc.response.SpringmvcProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:42:47,631/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.producer.CseResponseProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:42:47,632/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.producer.CompletableFutureProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:42:47,634/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.jaxrs.response.JaxrsProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:42:47,635/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.producer.DefaultProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:42:47,647/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.springmvc.response.SpringmvcConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:42:47,658/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.consumer.CseResponseConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:42:47,660/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.consumer.CompletableFutureConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:42:47,661/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.jaxrs.response.JaxrsConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:42:47,662/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.consumer.DefaultConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 14:42:48,635/CST][main][INFO]load microservice config, name=cdmi-geo, paths=[file:/D:/2.JSpace/cdmi-dev-all/cdmi-geo-server/target/classes/microservice.yaml] org.apache.servicecomb.serviceregistry.definition.MicroserviceDefinition.logConfigPath(MicroserviceDefinition.java:142)
[2019-01-10 14:42:48,699/CST][main][INFO]It is running in the normal mode, a separated service registry is required org.apache.servicecomb.serviceregistry.registry.ServiceRegistryFactory.create(ServiceRegistryFactory.java:81)
[2019-01-10 14:42:48,951/CST][main][INFO]add network interface name:eth0,host address:192.168.99.1 org.apache.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:114)
[2019-01-10 14:42:48,962/CST][main][INFO]add network interface name:wlan0,host address:192.168.31.121 org.apache.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:114)
[2019-01-10 14:42:49,015/CST][main][INFO]add network interface name:eth7,host address:192.168.56.1 org.apache.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:114)
[2019-01-10 14:42:49,124/CST][main][INFO]add host name from localhost:LAPTOP-K999KJQI,host address:192.168.99.1 org.apache.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:72)
[2019-01-10 14:42:49,267/CST][main][INFO]executor group 2, thread per group 4. org.apache.servicecomb.core.executor.FixedThreadExecutor.<init>(FixedThreadExecutor.java:54)
[2019-01-10 14:42:49,458/CST][main][WARN]address /0.0.0.0:8080, auto select a host address to publish 192.168.99.1:8080, maybe not the correct one org.apache.servicecomb.serviceregistry.RegistryUtils.genPublishIpPort(RegistryUtils.java:181)
[2019-01-10 14:42:49,472/CST][main][INFO]choose org.apache.servicecomb.transport.rest.vertx.VertxRestTransport for rest. org.apache.servicecomb.core.transport.TransportManager.chooseOneTransport(TransportManager.java:84)
[2019-01-10 14:42:49,473/CST][main][INFO]choose org.apache.servicecomb.transport.highway.HighwayTransport for highway. org.apache.servicecomb.core.transport.TransportManager.chooseOneTransport(TransportManager.java:84)
[2019-01-10 14:42:50,118/CST][transport-vert.x-eventloop-thread-2][INFO]Found HttpServerFilter: org.apache.servicecomb.common.rest.filter.tracing.TracingFilter. org.apache.servicecomb.transport.rest.vertx.AbstractVertxHttpDispatcher.<init>(AbstractVertxHttpDispatcher.java:40)
[2019-01-10 14:42:50,119/CST][transport-vert.x-eventloop-thread-2][INFO]init vertx http dispatcher org.apache.servicecomb.transport.rest.vertx.VertxRestDispatcher org.apache.servicecomb.transport.rest.vertx.RestServerVerticle.initDispatcher(RestServerVerticle.java:95)
[2019-01-10 14:42:50,122/CST][transport-vert.x-eventloop-thread-2][INFO]set uploads directory to null. org.apache.servicecomb.transport.rest.vertx.AbstractVertxHttpDispatcher.createBodyHandler(AbstractVertxHttpDispatcher.java:53)
[2019-01-10 14:42:50,483/CST][transport-vert.x-eventloop-thread-2][INFO]rest listen success. address=0.0.0.0:8080 org.apache.servicecomb.transport.rest.vertx.RestServerVerticle.lambda$startListen$0(RestServerVerticle.java:103)
[2019-01-10 14:42:50,484/CST][main][INFO]endpoint to publish: rest://192.168.99.1:8080 org.apache.servicecomb.core.transport.TransportManager.init(TransportManager.java:58)
[2019-01-10 14:42:50,496/CST][transport-vert.x-eventloop-thread-6][WARN]highway listen address is not configured, will not listen. org.apache.servicecomb.transport.highway.HighwayServerVerticle.startListen(HighwayServerVerticle.java:59)
[2019-01-10 14:42:50,498/CST][main][INFO]running microservice register task. org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2019-01-10 14:42:50,656/CST][main][INFO]Microservice exists in service center, no need to register. id=cba9ca35b096e6b143a6994610a77332cbd4dcf0 appId=cdmi-geo-server, name=cdmi-geo, version=0.0.1 org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:64)
[2019-01-10 14:42:50,693/CST][main][INFO]SchemaIds is equals to service center. id=cba9ca35b096e6b143a6994610a77332cbd4dcf0 appId=cdmi-geo-server, name=cdmi-geo, version=0.0.1, schemaIds=[] org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.checkSchemaIdSet(MicroserviceRegisterTask.java:127)
[2019-01-10 14:42:50,697/CST][main][INFO]read MicroserviceRegisterTask status is FINISHED org.apache.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2019-01-10 14:42:50,697/CST][main][INFO]running microservice instance register task. org.apache.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:59)
[2019-01-10 14:42:50,751/CST][main][INFO]Register microservice instance success. microserviceId=cba9ca35b096e6b143a6994610a77332cbd4dcf0 instanceId=f4435dd114a211e9a9d40242ac110002 endpoints=[rest://192.168.99.1:8080] lease 120s org.apache.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:77)
[2019-01-10 14:42:50,751/CST][main][INFO]receive MicroserviceInstanceRegisterTask event, check instance Id... org.apache.servicecomb.core.CseApplicationListener$1.afterRegistryInstance(CseApplicationListener.java:170)
[2019-01-10 14:42:50,751/CST][main][INFO]instance registry succeeds for the first time, will send AFTER_REGISTRY event. org.apache.servicecomb.core.CseApplicationListener$1.afterRegistryInstance(CseApplicationListener.java:172)
[2019-01-10 14:42:50,754/CST][main][INFO]read MicroserviceInstanceRegisterTask status is FINISHED org.apache.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2019-01-10 14:42:50,770/CST][main][INFO]Started Application in 6.962 seconds (JVM running for 8.117) org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:57)
[2019-01-10 14:42:50,797/CST][registry-vert.x-eventloop-thread-2][INFO]watching microservice cba9ca35b096e6b143a6994610a77332cbd4dcf0 successfully, the chosen service center address is 192.168.99.100:30100 org.apache.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$8(ServiceRegistryClientImpl.java:533)
[2019-01-10 14:43:15,027/CST][transport-vert.x-eventloop-thread-2][ERROR]No schema defined for cdmi-geo-server:cdmi-geo. org.apache.servicecomb.common.rest.AbstractRestInvocation.findRestOperation(AbstractRestInvocation.java:77)
[2019-01-10 14:43:20,768/CST][Service Center Task][WARN]sc task interval changed from -1 to 30 org.apache.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.beginCycle(ServiceCenterTaskMonitor.java:39)
[2019-01-10 14:47:10,255/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 14:47:10,315/CST][main][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@42d80b78: startup date [Thu Jan 10 14:47:10 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 14:47:10,417/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:11,235/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-bizkeeper/1.0.0-m1/handler-bizkeeper-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:11,256/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-metrics/1.0.0-m1/foundation-metrics-1.0.0-m1.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:11,274/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-loadbalance/1.0.0-m1/handler-loadbalance-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:11,292/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-vertx/1.0.0-m1/foundation-vertx-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:11,319/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/transport-rest-client/1.0.0-m1/transport-rest-client-1.0.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:11,340/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-config/1.0.0-m1/foundation-config-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:11,369/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:11,637/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:12,005/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-bizkeeper/1.0.0-m1/handler-bizkeeper-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:12,016/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-metrics/1.0.0-m1/foundation-metrics-1.0.0-m1.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:12,032/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-loadbalance/1.0.0-m1/handler-loadbalance-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:12,043/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-vertx/1.0.0-m1/foundation-vertx-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:12,053/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/transport-rest-client/1.0.0-m1/transport-rest-client-1.0.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:12,064/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-config/1.0.0-m1/foundation-config-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:12,075/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:12,410/CST][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2019-01-10 14:47:12,410/CST][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2019-01-10 14:47:12,416/CST][main][INFO]create dynamic config: org.apache.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:169)
[2019-01-10 14:47:12,472/CST][main][INFO]create local config: org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:87)
[2019-01-10 14:47:12,472/CST][main][INFO] file:/D:/2.JSpace/cdmi-dev-all/cdmi-geo-server/target/classes/microservice.yaml. org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:89)
[2019-01-10 14:47:12,489/CST][main][INFO]Can not get the SPI service, the interface type is: interface org.apache.servicecomb.config.spi.ConfigCenterConfigurationSource org.apache.servicecomb.foundation.common.utils.SPIServiceUtils.getTargetService(SPIServiceUtils.java:54)
[2019-01-10 14:47:12,489/CST][main][INFO]config center SPI service can not find, skip to load configuration from config center org.apache.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:154)
[2019-01-10 14:47:12,512/CST][main][WARN]Configuration installed by others, will ignore this configuration. org.apache.servicecomb.config.ConfigUtil.installDynamicConfig(ConfigUtil.java:187)
[2019-01-10 14:47:12,908/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 14:47:13,034/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'serviceCombSpringConfiguration': Unsatisfied dependency expressed through method 'setCseApplicationListener' parameter 0; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'org.apache.servicecomb.core.CseApplicationListener' available: expected single matching bean but found 2: org.apache.servicecomb.core.CseApplicationListener#0,org.apache.servicecomb.core.CseApplicationListener#1 org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2019-01-10 14:47:51,597/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 14:47:51,678/CST][main][INFO]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@42d80b78: startup date [Thu Jan 10 14:47:51 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 14:47:51,793/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:52,604/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-bizkeeper/1.0.0-m1/handler-bizkeeper-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:52,628/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-metrics/1.0.0-m1/foundation-metrics-1.0.0-m1.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:52,651/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-loadbalance/1.0.0-m1/handler-loadbalance-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:52,674/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-vertx/1.0.0-m1/foundation-vertx-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:52,691/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/transport-rest-client/1.0.0-m1/transport-rest-client-1.0.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:52,729/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-config/1.0.0-m1/foundation-config-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:52,749/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:53,059/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:53,385/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-bizkeeper/1.0.0-m1/handler-bizkeeper-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:53,397/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-metrics/1.0.0-m1/foundation-metrics-1.0.0-m1.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:53,409/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-loadbalance/1.0.0-m1/handler-loadbalance-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:53,421/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-vertx/1.0.0-m1/foundation-vertx-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:53,442/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/transport-rest-client/1.0.0-m1/transport-rest-client-1.0.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:53,455/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-config/1.0.0-m1/foundation-config-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:53,467/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 14:47:53,832/CST][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2019-01-10 14:47:53,833/CST][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2019-01-10 14:47:53,838/CST][main][INFO]create dynamic config: org.apache.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:169)
[2019-01-10 14:47:53,891/CST][main][INFO]create local config: org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:87)
[2019-01-10 14:47:53,891/CST][main][INFO] file:/D:/2.JSpace/cdmi-dev-all/cdmi-geo-server/target/classes/microservice.yaml. org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:89)
[2019-01-10 14:47:53,905/CST][main][INFO]Can not get the SPI service, the interface type is: interface org.apache.servicecomb.config.spi.ConfigCenterConfigurationSource org.apache.servicecomb.foundation.common.utils.SPIServiceUtils.getTargetService(SPIServiceUtils.java:54)
[2019-01-10 14:47:53,906/CST][main][INFO]config center SPI service can not find, skip to load configuration from config center org.apache.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:154)
[2019-01-10 14:47:53,932/CST][main][WARN]Configuration installed by others, will ignore this configuration. org.apache.servicecomb.config.ConfigUtil.installDynamicConfig(ConfigUtil.java:187)
[2019-01-10 14:47:54,291/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 14:47:54,372/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'serviceCombSpringConfiguration': Unsatisfied dependency expressed through method 'setCseApplicationListener' parameter 0; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'org.apache.servicecomb.core.CseApplicationListener' available: expected single matching bean but found 2: org.apache.servicecomb.core.CseApplicationListener#0,org.apache.servicecomb.core.CseApplicationListener#1 org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2019-01-10 14:49:02,662/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 14:49:04,046/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@41fecb8b: startup date [Thu Jan 10 14:49:04 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 14:49:04,085/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.2.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 14:49:04,401/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 14:49:04,455/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$282eda35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 14:49:05,215/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:662)
[2019-01-10 14:49:05,252/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4d18aa28: startup date [Thu Jan 10 14:49:05 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@41fecb8b org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 14:49:05,458/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to process import candidates for configuration class [pw.cdmi.aws.geo.Application]; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/context/annotation/DeterminableImports org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2019-01-10 14:49:05,459/CST][main][ERROR]Destroy method on bean with name 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory' threw an exception org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:581)
java.lang.IllegalStateException: ApplicationEventMulticaster not initialized - call 'refresh' before multicasting events via the context: org.springframework.context.annotation.AnnotationConfigApplicationContext@4d18aa28: startup date [Thu Jan 10 14:49:05 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@41fecb8b
	at org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:404)
	at org.springframework.context.support.ApplicationListenerDetector.postProcessBeforeDestruction(ApplicationListenerDetector.java:97)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:959)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:966)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:555)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:372)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1187)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1176)
	at pw.cdmi.aws.geo.Application.main(Application.java:31)
[2019-01-10 14:49:05,470/CST][main][ERROR]Application startup failed org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:840)
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to process import candidates for configuration class [pw.cdmi.aws.geo.Application]; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/context/annotation/DeterminableImports
	at org.springframework.context.annotation.ConfigurationClassParser.processImports(ConfigurationClassParser.java:541)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:279)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:230)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:197)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:166)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:308)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:228)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:270)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:686)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:524)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:372)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1187)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1176)
	at pw.cdmi.aws.geo.Application.main(Application.java:31)
Caused by: java.lang.NoClassDefFoundError: org/springframework/boot/context/annotation/DeterminableImports
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:763)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.context.annotation.ConfigurationClassParser$SourceClass.loadClass(ConfigurationClassParser.java:738)
	at org.springframework.context.annotation.ConfigurationClassParser.processImports(ConfigurationClassParser.java:520)
	... 16 more
Caused by: java.lang.ClassNotFoundException: org.springframework.boot.context.annotation.DeterminableImports
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 30 more
[2019-01-10 15:02:03,580/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 15:02:04,973/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@41fecb8b: startup date [Thu Jan 10 15:02:04 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 15:02:05,005/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.2.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 15:02:05,348/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 15:02:05,400/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$282eda35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 15:02:06,137/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:662)
[2019-01-10 15:02:06,141/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4d18aa28: startup date [Thu Jan 10 15:02:06 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@41fecb8b org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 15:02:06,158/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 15:02:06,832/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-bizkeeper/1.0.0-m1/handler-bizkeeper-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 15:02:06,868/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-metrics/1.0.0-m1/foundation-metrics-1.0.0-m1.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 15:02:06,894/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-loadbalance/1.0.0-m1/handler-loadbalance-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 15:02:06,915/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-vertx/1.0.0-m1/foundation-vertx-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 15:02:06,943/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/transport-rest-client/1.0.0-m1/transport-rest-client-1.0.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 15:02:06,962/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-config/1.0.0-m1/foundation-config-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 15:02:06,979/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 15:02:07,272/CST][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2019-01-10 15:02:07,275/CST][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2019-01-10 15:02:07,283/CST][main][INFO]create dynamic config: org.apache.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:169)
[2019-01-10 15:02:07,295/CST][main][INFO]create local config: org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:87)
[2019-01-10 15:02:07,296/CST][main][INFO] file:/D:/2.JSpace/cdmi-dev-all/cdmi-geo-server/target/classes/microservice.yaml. org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:89)
[2019-01-10 15:02:07,329/CST][main][INFO]Can not get the SPI service, the interface type is: interface org.apache.servicecomb.config.spi.ConfigCenterConfigurationSource org.apache.servicecomb.foundation.common.utils.SPIServiceUtils.getTargetService(SPIServiceUtils.java:54)
[2019-01-10 15:02:07,329/CST][main][INFO]config center SPI service can not find, skip to load configuration from config center org.apache.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:154)
[2019-01-10 15:02:07,656/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 15:02:08,023/CST][main][INFO]Found swagger generator context: org.apache.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext org.apache.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2019-01-10 15:02:08,025/CST][main][INFO]Found swagger generator context: org.apache.servicecomb.swagger.generator.jaxrs.JaxrsSwaggerGeneratorContext org.apache.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2019-01-10 15:02:08,026/CST][main][INFO]Found swagger generator context: org.apache.servicecomb.swagger.generator.pojo.PojoSwaggerGeneratorContext org.apache.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2019-01-10 15:02:08,053/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.springmvc.response.SpringmvcProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 15:02:08,054/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.producer.CseResponseProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 15:02:08,055/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.producer.CompletableFutureProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 15:02:08,056/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.jaxrs.response.JaxrsProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 15:02:08,057/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.producer.DefaultProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 15:02:08,064/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.springmvc.response.SpringmvcConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 15:02:08,065/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.consumer.CseResponseConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 15:02:08,066/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.consumer.CompletableFutureConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 15:02:08,066/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.jaxrs.response.JaxrsConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 15:02:08,067/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.consumer.DefaultConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 15:02:08,971/CST][main][INFO]load microservice config, name=cdmi-geo, paths=[file:/D:/2.JSpace/cdmi-dev-all/cdmi-geo-server/target/classes/microservice.yaml] org.apache.servicecomb.serviceregistry.definition.MicroserviceDefinition.logConfigPath(MicroserviceDefinition.java:142)
[2019-01-10 15:02:09,051/CST][main][INFO]It is running in the normal mode, a separated service registry is required org.apache.servicecomb.serviceregistry.registry.ServiceRegistryFactory.create(ServiceRegistryFactory.java:81)
[2019-01-10 15:02:09,274/CST][main][INFO]add network interface name:eth0,host address:192.168.99.1 org.apache.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:114)
[2019-01-10 15:02:09,285/CST][main][INFO]add network interface name:wlan0,host address:192.168.31.121 org.apache.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:114)
[2019-01-10 15:02:09,347/CST][main][INFO]add network interface name:eth7,host address:192.168.56.1 org.apache.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:114)
[2019-01-10 15:02:09,451/CST][main][INFO]add host name from localhost:LAPTOP-K999KJQI,host address:192.168.99.1 org.apache.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:72)
[2019-01-10 15:02:09,632/CST][main][INFO]executor group 2, thread per group 4. org.apache.servicecomb.core.executor.FixedThreadExecutor.<init>(FixedThreadExecutor.java:54)
[2019-01-10 15:02:09,835/CST][main][WARN]address /0.0.0.0:8080, auto select a host address to publish 192.168.99.1:8080, maybe not the correct one org.apache.servicecomb.serviceregistry.RegistryUtils.genPublishIpPort(RegistryUtils.java:181)
[2019-01-10 15:02:09,839/CST][main][INFO]choose org.apache.servicecomb.transport.rest.vertx.VertxRestTransport for rest. org.apache.servicecomb.core.transport.TransportManager.chooseOneTransport(TransportManager.java:84)
[2019-01-10 15:02:09,839/CST][main][INFO]choose org.apache.servicecomb.transport.highway.HighwayTransport for highway. org.apache.servicecomb.core.transport.TransportManager.chooseOneTransport(TransportManager.java:84)
[2019-01-10 15:02:10,389/CST][transport-vert.x-eventloop-thread-2][INFO]Found HttpServerFilter: org.apache.servicecomb.common.rest.filter.tracing.TracingFilter. org.apache.servicecomb.transport.rest.vertx.AbstractVertxHttpDispatcher.<init>(AbstractVertxHttpDispatcher.java:40)
[2019-01-10 15:02:10,392/CST][transport-vert.x-eventloop-thread-2][INFO]init vertx http dispatcher org.apache.servicecomb.transport.rest.vertx.VertxRestDispatcher org.apache.servicecomb.transport.rest.vertx.RestServerVerticle.initDispatcher(RestServerVerticle.java:95)
[2019-01-10 15:02:10,396/CST][transport-vert.x-eventloop-thread-2][INFO]set uploads directory to null. org.apache.servicecomb.transport.rest.vertx.AbstractVertxHttpDispatcher.createBodyHandler(AbstractVertxHttpDispatcher.java:53)
[2019-01-10 15:02:10,752/CST][transport-vert.x-eventloop-thread-2][INFO]rest listen success. address=0.0.0.0:8080 org.apache.servicecomb.transport.rest.vertx.RestServerVerticle.lambda$startListen$0(RestServerVerticle.java:103)
[2019-01-10 15:02:10,753/CST][main][INFO]endpoint to publish: rest://192.168.99.1:8080 org.apache.servicecomb.core.transport.TransportManager.init(TransportManager.java:58)
[2019-01-10 15:02:10,765/CST][transport-vert.x-eventloop-thread-6][WARN]highway listen address is not configured, will not listen. org.apache.servicecomb.transport.highway.HighwayServerVerticle.startListen(HighwayServerVerticle.java:59)
[2019-01-10 15:02:10,767/CST][main][INFO]running microservice register task. org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:57)
[2019-01-10 15:02:10,927/CST][main][INFO]Microservice exists in service center, no need to register. id=cba9ca35b096e6b143a6994610a77332cbd4dcf0 appId=cdmi-geo-server, name=cdmi-geo, version=0.0.1 org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.doRegister(MicroserviceRegisterTask.java:64)
[2019-01-10 15:02:10,956/CST][main][INFO]SchemaIds is equals to service center. id=cba9ca35b096e6b143a6994610a77332cbd4dcf0 appId=cdmi-geo-server, name=cdmi-geo, version=0.0.1, schemaIds=[] org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.checkSchemaIdSet(MicroserviceRegisterTask.java:127)
[2019-01-10 15:02:10,960/CST][main][INFO]read MicroserviceRegisterTask status is FINISHED org.apache.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2019-01-10 15:02:10,960/CST][main][INFO]running microservice instance register task. org.apache.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:59)
[2019-01-10 15:02:11,012/CST][main][INFO]Register microservice instance success. microserviceId=cba9ca35b096e6b143a6994610a77332cbd4dcf0 instanceId=a7d3e1c514a511e9a9d40242ac110002 endpoints=[rest://192.168.99.1:8080] lease 120s org.apache.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask.doRegister(MicroserviceInstanceRegisterTask.java:77)
[2019-01-10 15:02:11,012/CST][main][INFO]receive MicroserviceInstanceRegisterTask event, check instance Id... org.apache.servicecomb.core.CseApplicationListener$1.afterRegistryInstance(CseApplicationListener.java:170)
[2019-01-10 15:02:11,013/CST][main][INFO]instance registry succeeds for the first time, will send AFTER_REGISTRY event. org.apache.servicecomb.core.CseApplicationListener$1.afterRegistryInstance(CseApplicationListener.java:172)
[2019-01-10 15:02:11,015/CST][main][INFO]read MicroserviceInstanceRegisterTask status is FINISHED org.apache.servicecomb.serviceregistry.task.ServiceCenterTask.onRegisterTask(ServiceCenterTask.java:51)
[2019-01-10 15:02:11,037/CST][main][INFO]Started Application in 7.216 seconds (JVM running for 8.374) org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:57)
[2019-01-10 15:02:11,058/CST][registry-vert.x-eventloop-thread-2][INFO]watching microservice cba9ca35b096e6b143a6994610a77332cbd4dcf0 successfully, the chosen service center address is 192.168.99.100:30100 org.apache.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$watch$8(ServiceRegistryClientImpl.java:533)
[2019-01-10 15:02:41,043/CST][Service Center Task][WARN]sc task interval changed from -1 to 30 org.apache.servicecomb.serviceregistry.task.ServiceCenterTaskMonitor.beginCycle(ServiceCenterTaskMonitor.java:39)
[2019-01-10 15:03:18,161/CST][transport-vert.x-eventloop-thread-2][ERROR]No schema defined for cdmi-geo-server:cdmi-geo. org.apache.servicecomb.common.rest.AbstractRestInvocation.findRestOperation(AbstractRestInvocation.java:77)
[2019-01-10 15:23:59,248/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 15:24:00,725/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@41fecb8b: startup date [Thu Jan 10 15:24:00 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 15:24:00,756/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.2.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 15:24:01,111/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 15:24:01,168/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$282eda35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 15:24:01,965/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:662)
[2019-01-10 15:24:01,971/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4d18aa28: startup date [Thu Jan 10 15:24:01 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@41fecb8b org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 15:24:01,991/CST][main][INFO]Loading XML bean definitions from file [D:\2.JSpace\cdmi-dev-all\cdmi-geo-server\target\classes\META-INF\spring\customer.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 15:24:02,269/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/java-chassis-core/1.0.0-m1/java-chassis-core-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 15:24:02,817/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-bizkeeper/1.0.0-m1/handler-bizkeeper-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 15:24:02,861/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-metrics/1.0.0-m1/foundation-metrics-1.0.0-m1.jar!/META-INF/spring/metrics.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 15:24:02,877/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/handler-loadbalance/1.0.0-m1/handler-loadbalance-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 15:24:02,893/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-vertx/1.0.0-m1/foundation-vertx-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 15:24:02,909/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/transport-rest-client/1.0.0-m1/transport-rest-client-1.0.0-m1.jar!/META-INF/spring/cse.transport.rest.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 15:24:02,930/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-config/1.0.0-m1/foundation-config-1.0.0-m1.jar!/META-INF/spring/cse.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 15:24:02,956/CST][main][INFO]Loading XML bean definitions from URL [jar:file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/META-INF/spring/common.bean.xml] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317)
[2019-01-10 15:24:03,331/CST][main][WARN]No URLs will be polled as dynamic configuration sources. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121)
[2019-01-10 15:24:03,332/CST][main][INFO]To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122)
[2019-01-10 15:24:03,338/CST][main][INFO]create dynamic config: org.apache.servicecomb.config.ConfigUtil.createDynamicConfig(ConfigUtil.java:169)
[2019-01-10 15:24:03,348/CST][main][INFO]create local config: org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:87)
[2019-01-10 15:24:03,349/CST][main][INFO] file:/D:/2.JSpace/cdmi-dev-all/cdmi-geo-server/target/classes/microservice.yaml. org.apache.servicecomb.config.ConfigUtil.createLocalConfig(ConfigUtil.java:89)
[2019-01-10 15:24:03,366/CST][main][INFO]Can not get the SPI service, the interface type is: interface org.apache.servicecomb.config.spi.ConfigCenterConfigurationSource org.apache.servicecomb.foundation.common.utils.SPIServiceUtils.getTargetService(SPIServiceUtils.java:54)
[2019-01-10 15:24:03,366/CST][main][INFO]config center SPI service can not find, skip to load configuration from config center org.apache.servicecomb.config.ConfigUtil.createConfigFromConfigCenter(ConfigUtil.java:154)
[2019-01-10 15:24:03,643/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 15:24:03,938/CST][main][INFO]Found swagger generator context: org.apache.servicecomb.swagger.generator.springmvc.SpringmvcSwaggerGeneratorContext org.apache.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2019-01-10 15:24:03,939/CST][main][INFO]Found swagger generator context: org.apache.servicecomb.swagger.generator.jaxrs.JaxrsSwaggerGeneratorContext org.apache.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2019-01-10 15:24:03,939/CST][main][INFO]Found swagger generator context: org.apache.servicecomb.swagger.generator.pojo.PojoSwaggerGeneratorContext org.apache.servicecomb.swagger.generator.core.CompositeSwaggerGeneratorContext.<init>(CompositeSwaggerGeneratorContext.java:39)
[2019-01-10 15:24:03,967/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.springmvc.response.SpringmvcProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 15:24:03,967/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.producer.CseResponseProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 15:24:03,968/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.producer.CompletableFutureProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 15:24:03,969/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.jaxrs.response.JaxrsProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 15:24:03,969/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.producer.DefaultProducerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.producer.ProducerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 15:24:03,979/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.springmvc.response.SpringmvcConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 15:24:03,979/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.consumer.CseResponseConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 15:24:03,980/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.consumer.CompletableFutureConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 15:24:03,981/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.jaxrs.response.JaxrsConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 15:24:03,981/CST][main][INFO]found factory org.apache.servicecomb.swagger.invocation.response.consumer.DefaultConsumerResponseMapperFactory of org.apache.servicecomb.swagger.invocation.response.consumer.ConsumerResponseMapperFactory: org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys.lambda$new$0(ResponseMapperFactorys.java:41)
[2019-01-10 15:24:04,848/CST][main][INFO]load microservice config, name=cdmi-geo, paths=[file:/D:/2.JSpace/cdmi-dev-all/cdmi-geo-server/target/classes/microservice.yaml] org.apache.servicecomb.serviceregistry.definition.MicroserviceDefinition.logConfigPath(MicroserviceDefinition.java:142)
[2019-01-10 15:24:04,926/CST][main][INFO]It is running in the normal mode, a separated service registry is required org.apache.servicecomb.serviceregistry.registry.ServiceRegistryFactory.create(ServiceRegistryFactory.java:81)
[2019-01-10 15:24:05,162/CST][main][INFO]add network interface name:eth0,host address:192.168.99.1 org.apache.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:114)
[2019-01-10 15:24:05,175/CST][main][INFO]add network interface name:wlan0,host address:192.168.31.121 org.apache.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:114)
[2019-01-10 15:24:05,248/CST][main][INFO]add network interface name:eth7,host address:192.168.56.1 org.apache.servicecomb.foundation.common.net.NetUtils.doGetIpv4AddressFromNetworkInterface(NetUtils.java:114)
[2019-01-10 15:24:05,373/CST][main][INFO]add host name from localhost:LAPTOP-K999KJQI,host address:192.168.99.1 org.apache.servicecomb.foundation.common.net.NetUtils.<clinit>(NetUtils.java:72)
[2019-01-10 15:24:05,568/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoResource': Unsatisfied dependency expressed through field 'geoService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'geoServiceImpl': Unsatisfied dependency expressed through field 'cityDaoImpl'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'pw.cdmi.aws.geo.repositories.CityRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)} org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2019-01-10 15:24:05,571/CST][main][INFO]

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled. org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer.logAutoConfigurationReport(AutoConfigurationReportLoggingInitializer.java:101)
[2019-01-10 15:24:05,587/CST][main][ERROR]

***************************
APPLICATION FAILED TO START
***************************

Description:

Field cityDaoImpl in pw.cdmi.aws.geo.service.impl.GeoServiceImpl required a bean of type 'pw.cdmi.aws.geo.repositories.CityRepository' that could not be found.


Action:

Consider defining a bean of type 'pw.cdmi.aws.geo.repositories.CityRepository' in your configuration.
 org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:42)
[2019-01-10 15:25:02,229/CST][main][ERROR]Can not output merged.log4j.properties,because can not write to directory of file file:/D:/5.Maven/.m2/repository/org/apache/servicecomb/foundation-common/1.0.0-m1/foundation-common-1.0.0-m1.jar!/config/base/log4j.properties org.apache.servicecomb.foundation.common.utils.Log4jUtils.outputFile(Log4jUtils.java:95)
[2019-01-10 15:25:03,721/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@41fecb8b: startup date [Thu Jan 10 15:25:03 CST 2019]; root of context hierarchy org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 15:25:03,750/CST][background-preinit][INFO]HV000001: Hibernate Validator 5.2.4.Final org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30)
[2019-01-10 15:25:04,090/CST][main][INFO]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155)
[2019-01-10 15:25:04,147/CST][main][INFO]Bean 'configurationPropertiesRebinderAutoConfiguration' of type [class org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$282eda35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:325)
[2019-01-10 15:25:05,004/CST][main][INFO]No active profile set, falling back to default profiles: default org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:662)
[2019-01-10 15:25:05,033/CST][main][INFO]Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4d18aa28: startup date [Thu Jan 10 15:25:05 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@41fecb8b org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:582)
[2019-01-10 15:25:05,180/CST][main][WARN]Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to process import candidates for configuration class [pw.cdmi.aws.geo.Application]; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/context/annotation/DeterminableImports org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
[2019-01-10 15:25:05,181/CST][main][ERROR]Destroy method on bean with name 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory' threw an exception org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:581)
java.lang.IllegalStateException: ApplicationEventMulticaster not initialized - call 'refresh' before multicasting events via the context: org.springframework.context.annotation.AnnotationConfigApplicationContext@4d18aa28: startup date [Thu Jan 10 15:25:05 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@41fecb8b
	at org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:404)
	at org.springframework.context.support.ApplicationListenerDetector.postProcessBeforeDestruction(ApplicationListenerDetector.java:97)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:959)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:966)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:555)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:372)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1187)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1176)
	at pw.cdmi.aws.geo.Application.main(Application.java:31)
[2019-01-10 15:25:05,195/CST][main][ERROR]Application startup failed org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:840)
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to process import candidates for configuration class [pw.cdmi.aws.geo.Application]; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/context/annotation/DeterminableImports
	at org.springframework.context.annotation.ConfigurationClassParser.processImports(ConfigurationClassParser.java:541)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:279)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:230)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:197)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:166)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:308)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:228)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:270)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:686)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:524)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:372)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1187)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1176)
	at pw.cdmi.aws.geo.Application.main(Application.java:31)
Caused by: java.lang.NoClassDefFoundError: org/springframework/boot/context/annotation/DeterminableImports
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:763)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.context.annotation.ConfigurationClassParser$SourceClass.loadClass(ConfigurationClassParser.java:738)
	at org.springframework.context.annotation.ConfigurationClassParser.processImports(ConfigurationClassParser.java:520)
	... 16 more
Caused by: java.lang.ClassNotFoundException: org.springframework.boot.context.annotation.DeterminableImports
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 30 more
